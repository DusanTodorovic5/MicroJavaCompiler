INFO  10:31:45,828 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:31:45,864 - #2 program
INFO  10:31:45,864 - #45 p
INFO  10:31:45,864 - #6 const
INFO  10:31:45,865 - #45 int
INFO  10:31:45,865 - #45 size
INFO  10:31:45,865 - #30 =
INFO  10:31:45,865 - #44 10
INFO  10:31:45,865 - #33 ;
INFO  10:31:45,866 - #4 class
INFO  10:31:45,867 - #45 Table
INFO  10:31:45,867 - #14 extends
INFO  10:31:45,868 - #17 +
ERROR 10:31:45,868 - 
Syntax Error on line 5
INFO  10:31:45,868 - #18 -
INFO  10:31:45,868 - #41 {
INFO  10:31:45,868 - #45 int
INFO  10:31:45,869 - #45 pos
INFO  10:31:45,869 - #39 [
INFO  10:31:45,869 - #40 ]
INFO  10:31:45,870 - #35 ,
INFO  10:31:45,870 - #45 neg
INFO  10:31:45,878 - #39 [
INFO  10:31:45,878 - #40 ]
INFO  10:31:45,878 - #35 ,
INFO  10:31:45,878 - #45 factor
INFO  10:31:45,878 - #33 ;
INFO  10:31:45,878 - #41 {
INFO  10:31:45,878 - #45 Table
INFO  10:31:45,878 - #37 (
INFO  10:31:45,879 - #45 int
INFO  10:31:45,879 - #45 factor
INFO  10:31:45,879 - #38 )
INFO  10:31:45,879 - #41 {
INFO  10:31:45,879 - #45 this
INFO  10:31:45,879 - #36 .
INFO  10:31:45,879 - #45 factor
INFO  10:31:45,879 - #30 =
INFO  10:31:45,880 - #45 factor
INFO  10:31:45,880 - #33 ;
INFO  10:31:45,880 - #42 }
INFO  10:31:45,880 - #13 void
INFO  10:31:45,880 - #45 putp
INFO  10:31:45,880 - #37 (
INFO  10:31:45,880 - #45 int
INFO  10:31:45,880 - #45 a
INFO  10:31:45,882 - #35 ,
INFO  10:31:45,882 - #45 int
INFO  10:31:45,882 - #45 idx
INFO  10:31:45,882 - #38 )
INFO  10:31:45,882 - #41 {
INFO  10:31:45,882 - #45 this
INFO  10:31:45,882 - #36 .
INFO  10:31:45,882 - #45 pos
INFO  10:31:45,882 - #39 [
INFO  10:31:45,882 - #45 idx
INFO  10:31:45,883 - #40 ]
INFO  10:31:45,883 - #30 =
INFO  10:31:45,883 - #45 a
INFO  10:31:45,883 - #33 ;
INFO  10:31:45,883 - #42 }
INFO  10:31:45,883 - #13 void
INFO  10:31:45,883 - #45 putn
INFO  10:31:45,883 - #37 (
INFO  10:31:45,883 - #45 int
INFO  10:31:45,883 - #45 a
INFO  10:31:45,883 - #35 ,
INFO  10:31:45,883 - #45 int
INFO  10:31:45,883 - #45 idx
INFO  10:31:45,883 - #38 )
INFO  10:31:45,883 - #41 {
INFO  10:31:45,884 - #45 this
INFO  10:31:45,884 - #36 .
INFO  10:31:45,884 - #45 neg
INFO  10:31:45,884 - #39 [
INFO  10:31:45,884 - #45 idx
INFO  10:31:45,884 - #40 ]
INFO  10:31:45,884 - #30 =
INFO  10:31:45,884 - #45 a
INFO  10:31:45,884 - #33 ;
INFO  10:31:45,884 - #42 }
INFO  10:31:45,885 - #45 int
INFO  10:31:45,885 - #45 getp
INFO  10:31:45,885 - #37 (
INFO  10:31:45,885 - #45 int
INFO  10:31:45,885 - #45 idx
INFO  10:31:45,885 - #38 )
INFO  10:31:45,885 - #41 {
INFO  10:31:45,885 - #12 return
INFO  10:31:45,885 - #45 pos
INFO  10:31:45,885 - #39 [
INFO  10:31:45,885 - #45 idx
INFO  10:31:45,885 - #40 ]
INFO  10:31:45,885 - #33 ;
INFO  10:31:45,885 - #42 }
INFO  10:31:45,885 - #45 int
INFO  10:31:45,885 - #45 getn
INFO  10:31:45,886 - #37 (
INFO  10:31:45,886 - #45 int
INFO  10:31:45,886 - #45 idx
INFO  10:31:45,886 - #38 )
INFO  10:31:45,886 - #41 {
INFO  10:31:45,886 - #12 return
INFO  10:31:45,887 - #45 neg
INFO  10:31:45,887 - #39 [
INFO  10:31:45,887 - #45 idx
INFO  10:31:45,887 - #40 ]
INFO  10:31:45,887 - #33 ;
INFO  10:31:45,887 - #42 }
INFO  10:31:45,887 - #42 }
INFO  10:31:45,887 - #42 }
INFO  10:31:45,887 - #45 Table
INFO  10:31:45,887 - #45 val
INFO  10:31:45,887 - #33 ;
INFO  10:31:45,887 - #45 Int
INFO  10:31:45,888 - #45 rows
INFO  10:31:45,888 - #35 ,
INFO  10:31:45,888 - #45 columns
INFO  10:31:45,888 - #33 ;
INFO  10:31:45,888 - #41 {
INFO  10:31:45,888 - #13 void
INFO  10:31:45,888 - #45 f
INFO  10:31:45,888 - #37 (
INFO  10:31:45,888 - #45 char
INFO  10:31:45,888 - #45 ch
INFO  10:31:45,888 - #35 ,
INFO  10:31:45,888 - #45 int
INFO  10:31:45,889 - #45 a
INFO  10:31:45,889 - #35 ,
INFO  10:31:45,889 - #45 int
INFO  10:31:45,889 - #45 arg
INFO  10:31:45,889 - #38 )
INFO  10:31:45,889 - #45 int
INFO  10:31:45,889 - #45 x
INFO  10:31:45,889 - #33 ;
INFO  10:31:45,889 - #41 {
INFO  10:31:45,889 - #45 x
INFO  10:31:45,889 - #30 =
INFO  10:31:45,890 - #45 arg
INFO  10:31:45,890 - #33 ;
INFO  10:31:45,890 - #42 }
INFO  10:31:45,890 - #13 void
INFO  10:31:45,890 - #45 main
INFO  10:31:45,890 - #37 (
INFO  10:31:45,890 - #38 )
INFO  10:31:45,890 - #45 int
INFO  10:31:45,890 - #45 x
INFO  10:31:45,890 - #35 ,
INFO  10:31:45,890 - #45 i
INFO  10:31:45,890 - #33 ;
INFO  10:31:45,890 - #45 char
INFO  10:31:45,891 - #45 c
INFO  10:31:45,891 - #33 ;
INFO  10:31:45,891 - #45 int
INFO  10:31:45,891 - #45 arr
INFO  10:31:45,891 - #39 [
INFO  10:31:45,891 - #40 ]
INFO  10:31:45,891 - #33 ;
INFO  10:31:45,891 - #41 {
INFO  10:31:45,891 - #45 val
INFO  10:31:45,891 - #30 =
INFO  10:31:45,891 - #9 new
INFO  10:31:45,891 - #45 Table
INFO  10:31:45,891 - #37 (
INFO  10:31:45,892 - #44 2
INFO  10:31:45,892 - #38 )
INFO  10:31:45,892 - #33 ;
INFO  10:31:45,892 - #45 arr
INFO  10:31:45,892 - #30 =
INFO  10:31:45,892 - #9 new
INFO  10:31:45,892 - #45 int
INFO  10:31:45,892 - #39 [
INFO  10:31:45,892 - #44 3
INFO  10:31:45,892 - #40 ]
INFO  10:31:45,892 - #33 ;
INFO  10:31:45,892 - #45 i
INFO  10:31:45,892 - #30 =
INFO  10:31:45,892 - #44 0
INFO  10:31:45,892 - #33 ;
INFO  10:31:45,892 - #8 while
INFO  10:31:45,892 - #37 (
INFO  10:31:45,893 - #45 i
INFO  10:31:45,893 - #26 <
INFO  10:31:45,893 - #44 3
INFO  10:31:45,893 - #38 )
INFO  10:31:45,893 - #41 {
INFO  10:31:45,893 - #45 arr
INFO  10:31:45,893 - #39 [
INFO  10:31:45,893 - #45 i
INFO  10:31:45,893 - #40 ]
INFO  10:31:45,893 - #30 =
INFO  10:31:45,893 - #45 i
INFO  10:31:45,893 - #33 ;
INFO  10:31:45,893 - #45 i
INFO  10:31:45,893 - #31 ++
INFO  10:31:45,893 - #33 ;
INFO  10:31:45,893 - #42 }
INFO  10:31:45,894 - #45 arr
INFO  10:31:45,894 - #36 .
INFO  10:31:45,894 - #16 foreach
INFO  10:31:45,894 - #37 (
INFO  10:31:45,894 - #45 x
INFO  10:31:45,894 - #43 =>
INFO  10:31:45,894 - #10 print
INFO  10:31:45,894 - #37 (
INFO  10:31:45,894 - #45 x
INFO  10:31:45,894 - #38 )
INFO  10:31:45,894 - #33 ;
INFO  10:31:45,894 - #38 )
INFO  10:31:45,894 - #33 ;
INFO  10:31:45,894 - #45 val
INFO  10:31:45,894 - #36 .
INFO  10:31:45,894 - #45 pos
INFO  10:31:45,894 - #30 =
INFO  10:31:45,894 - #9 new
INFO  10:31:45,894 - #45 int
INFO  10:31:45,894 - #39 [
INFO  10:31:45,895 - #45 size
INFO  10:31:45,895 - #40 ]
INFO  10:31:45,895 - #33 ;
INFO  10:31:45,895 - #45 val
INFO  10:31:45,895 - #36 .
INFO  10:31:45,895 - #45 neg
INFO  10:31:45,895 - #30 =
INFO  10:31:45,895 - #9 new
INFO  10:31:45,895 - #45 int
INFO  10:31:45,895 - #39 [
INFO  10:31:45,895 - #45 size
INFO  10:31:45,895 - #40 ]
INFO  10:31:45,895 - #33 ;
INFO  10:31:45,895 - #11 read
INFO  10:31:45,895 - #37 (
INFO  10:31:45,896 - #45 x
INFO  10:31:45,896 - #38 )
INFO  10:31:45,896 - #33 ;
INFO  10:31:45,896 - #39 [
INFO  10:31:45,896 - #45 i
INFO  10:31:45,896 - #35 ,
INFO  10:31:45,896 - #35 ,
INFO  10:31:45,896 - #45 x
INFO  10:31:45,896 - #40 ]
INFO  10:31:45,896 - #30 =
INFO  10:31:45,896 - #45 arr
INFO  10:31:45,898 - #33 ;
INFO  10:31:45,898 - #8 while
INFO  10:31:45,898 - #37 (
INFO  10:31:45,898 - #45 i
INFO  10:31:45,898 - #26 <
INFO  10:31:45,898 - #45 size
INFO  10:31:45,899 - #38 )
INFO  10:31:45,899 - #41 {
INFO  10:31:45,899 - #45 val
INFO  10:31:45,899 - #36 .
INFO  10:31:45,899 - #45 putp
INFO  10:31:45,899 - #37 (
INFO  10:31:45,899 - #44 0
INFO  10:31:45,899 - #35 ,
INFO  10:31:45,899 - #45 i
INFO  10:31:45,899 - #38 )
INFO  10:31:45,899 - #33 ;
INFO  10:31:45,899 - #45 val
INFO  10:31:45,899 - #36 .
INFO  10:31:45,899 - #45 putn
INFO  10:31:45,899 - #37 (
INFO  10:31:45,899 - #44 0
INFO  10:31:45,899 - #35 ,
INFO  10:31:45,899 - #45 i
INFO  10:31:45,900 - #38 )
INFO  10:31:45,900 - #33 ;
INFO  10:31:45,900 - #45 i
INFO  10:31:45,900 - #31 ++
INFO  10:31:45,900 - #33 ;
INFO  10:31:45,900 - #42 }
INFO  10:31:45,900 - #45 f
INFO  10:31:45,900 - #37 (
INFO  10:31:45,900 - #45 c
INFO  10:31:45,900 - #35 ,
INFO  10:31:45,900 - #45 x
INFO  10:31:45,900 - #35 ,
INFO  10:31:45,900 - #45 i
INFO  10:31:45,900 - #38 )
INFO  10:31:45,900 - #33 ;
INFO  10:31:45,900 - #11 read
INFO  10:31:45,900 - #37 (
INFO  10:31:45,900 - #45 rows
INFO  10:31:45,900 - #38 )
INFO  10:31:45,900 - #33 ;
INFO  10:31:45,900 - #45 x
INFO  10:31:45,900 - #30 =
INFO  10:31:45,900 - #45 rows
INFO  10:31:45,900 - #33 ;
INFO  10:31:45,900 - #8 while
INFO  10:31:45,901 - #37 (
INFO  10:31:45,901 - #46 true
INFO  10:31:45,901 - #38 )
INFO  10:31:45,901 - #41 {
INFO  10:31:45,901 - #7 if
INFO  10:31:45,901 - #37 (
INFO  10:31:45,901 - #45 x
INFO  10:31:45,901 - #27 <=
INFO  10:31:45,901 - #44 0
INFO  10:31:45,901 - #38 )
INFO  10:31:45,901 - #3 break
INFO  10:31:45,901 - #33 ;
INFO  10:31:45,901 - #7 if
INFO  10:31:45,901 - #37 (
INFO  10:31:45,901 - #44 0
INFO  10:31:45,901 - #27 <=
INFO  10:31:45,901 - #45 x
INFO  10:31:45,901 - #28 &&
INFO  10:31:45,901 - #45 x
INFO  10:31:45,901 - #26 <
INFO  10:31:45,901 - #45 size
INFO  10:31:45,901 - #38 )
INFO  10:31:45,901 - #41 {
INFO  10:31:45,901 - #45 val
INFO  10:31:45,902 - #36 .
INFO  10:31:45,902 - #45 putp
INFO  10:31:45,902 - #37 (
INFO  10:31:45,902 - #45 val
INFO  10:31:45,902 - #36 .
INFO  10:31:45,902 - #45 getp
INFO  10:31:45,902 - #37 (
INFO  10:31:45,902 - #45 x
INFO  10:31:45,902 - #38 )
INFO  10:31:45,902 - #17 +
INFO  10:31:45,902 - #44 1
INFO  10:31:45,902 - #38 )
INFO  10:31:45,902 - #33 ;
INFO  10:31:45,902 - #42 }
INFO  10:31:45,902 - #5 else
INFO  10:31:45,902 - #7 if
INFO  10:31:45,902 - #37 (
INFO  10:31:45,902 - #18 -
INFO  10:31:45,902 - #45 size
INFO  10:31:45,902 - #26 <
INFO  10:31:45,902 - #45 x
INFO  10:31:45,902 - #28 &&
INFO  10:31:45,903 - #45 x
INFO  10:31:45,903 - #26 <
INFO  10:31:45,903 - #44 0
INFO  10:31:45,903 - #38 )
INFO  10:31:45,903 - #41 {
INFO  10:31:45,903 - #45 val
INFO  10:31:45,903 - #36 .
INFO  10:31:45,903 - #45 putn
INFO  10:31:45,903 - #37 (
INFO  10:31:45,903 - #45 val
INFO  10:31:45,903 - #36 .
INFO  10:31:45,903 - #45 getn
INFO  10:31:45,903 - #37 (
INFO  10:31:45,903 - #18 -
INFO  10:31:45,903 - #45 x
INFO  10:31:45,903 - #38 )
INFO  10:31:45,903 - #17 +
INFO  10:31:45,903 - #44 1
INFO  10:31:45,903 - #38 )
INFO  10:31:45,903 - #33 ;
INFO  10:31:45,903 - #42 }
INFO  10:31:45,904 - #11 read
INFO  10:31:45,904 - #37 (
INFO  10:31:45,904 - #45 x
INFO  10:31:45,904 - #38 )
INFO  10:31:45,904 - #33 ;
INFO  10:31:45,904 - #42 }
INFO  10:31:45,904 - #42 }
INFO  10:31:45,904 - #42 }
ERROR 10:31:45,904 - Fatal error, parsing will not continue on line 60
