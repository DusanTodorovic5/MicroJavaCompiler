INFO  10:43:50,709 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:43:50,742 - #2 program
INFO  10:43:50,742 - #45 p
INFO  10:43:50,742 - #6 const
INFO  10:43:50,744 - #45 int
INFO  10:43:50,744 - #45 size
INFO  10:43:50,745 - #30 =
INFO  10:43:50,745 - #44 10
INFO  10:43:50,745 - #33 ;
INFO  10:43:50,746 - #4 class
INFO  10:43:50,747 - #45 Table
INFO  10:43:50,747 - #41 {
INFO  10:43:50,748 - #45 int
INFO  10:43:50,749 - #45 pos
INFO  10:43:50,749 - #39 [
INFO  10:43:50,749 - #40 ]
INFO  10:43:50,749 - #35 ,
INFO  10:43:50,752 - #45 neg
INFO  10:43:50,753 - #39 [
INFO  10:43:50,753 - #40 ]
INFO  10:43:50,753 - #35 ,
INFO  10:43:50,753 - #45 factor
INFO  10:43:50,753 - #33 ;
INFO  10:43:50,762 - #41 {
INFO  10:43:50,762 - #45 Table
INFO  10:43:50,762 - #37 (
INFO  10:43:50,762 - #45 int
INFO  10:43:50,762 - #45 factor
INFO  10:43:50,762 - #38 )
INFO  10:43:50,763 - #41 {
INFO  10:43:50,763 - #45 this
INFO  10:43:50,764 - #36 .
INFO  10:43:50,764 - #45 factor
INFO  10:43:50,764 - #30 =
INFO  10:43:50,764 - #45 factor
INFO  10:43:50,764 - #33 ;
INFO  10:43:50,765 - #42 }
INFO  10:43:50,765 - #13 void
INFO  10:43:50,766 - #45 putp
INFO  10:43:50,766 - #37 (
INFO  10:43:50,766 - #45 int
INFO  10:43:50,766 - #45 a
INFO  10:43:50,766 - #35 ,
INFO  10:43:50,766 - #45 int
INFO  10:43:50,766 - #45 idx
INFO  10:43:50,767 - #38 )
INFO  10:43:50,767 - #41 {
INFO  10:43:50,767 - #45 this
INFO  10:43:50,767 - #36 .
INFO  10:43:50,767 - #45 pos
INFO  10:43:50,767 - #39 [
INFO  10:43:50,767 - #45 idx
INFO  10:43:50,767 - #40 ]
INFO  10:43:50,767 - #30 =
INFO  10:43:50,767 - #45 a
INFO  10:43:50,768 - #33 ;
INFO  10:43:50,768 - #42 }
INFO  10:43:50,768 - #13 void
INFO  10:43:50,768 - #45 putn
INFO  10:43:50,768 - #37 (
INFO  10:43:50,768 - #45 int
INFO  10:43:50,768 - #45 a
INFO  10:43:50,768 - #35 ,
INFO  10:43:50,768 - #45 int
INFO  10:43:50,768 - #45 idx
INFO  10:43:50,768 - #38 )
INFO  10:43:50,768 - #41 {
INFO  10:43:50,769 - #45 this
INFO  10:43:50,769 - #36 .
INFO  10:43:50,769 - #45 neg
INFO  10:43:50,769 - #39 [
INFO  10:43:50,769 - #45 idx
INFO  10:43:50,769 - #40 ]
INFO  10:43:50,769 - #30 =
INFO  10:43:50,769 - #45 a
INFO  10:43:50,769 - #33 ;
INFO  10:43:50,769 - #42 }
INFO  10:43:50,769 - #45 int
INFO  10:43:50,770 - #45 getp
INFO  10:43:50,770 - #37 (
INFO  10:43:50,770 - #45 int
INFO  10:43:50,770 - #45 idx
INFO  10:43:50,770 - #38 )
INFO  10:43:50,770 - #41 {
INFO  10:43:50,770 - #12 return
INFO  10:43:50,770 - #45 pos
INFO  10:43:50,770 - #39 [
INFO  10:43:50,770 - #45 idx
INFO  10:43:50,770 - #40 ]
INFO  10:43:50,771 - #33 ;
INFO  10:43:50,772 - #42 }
INFO  10:43:50,772 - #45 int
INFO  10:43:50,773 - #45 getn
INFO  10:43:50,773 - #37 (
INFO  10:43:50,773 - #45 int
INFO  10:43:50,773 - #45 idx
INFO  10:43:50,773 - #38 )
INFO  10:43:50,773 - #41 {
INFO  10:43:50,774 - #12 return
INFO  10:43:50,774 - #45 neg
INFO  10:43:50,774 - #39 [
INFO  10:43:50,774 - #45 idx
INFO  10:43:50,774 - #40 ]
INFO  10:43:50,774 - #33 ;
INFO  10:43:50,774 - #42 }
INFO  10:43:50,774 - #42 }
INFO  10:43:50,774 - #42 }
INFO  10:43:50,775 - #45 Table
INFO  10:43:50,776 - #45 val
INFO  10:43:50,776 - #33 ;
INFO  10:43:50,776 - #45 Int
INFO  10:43:50,777 - #45 rows
INFO  10:43:50,777 - #35 ,
INFO  10:43:50,777 - #45 columns
INFO  10:43:50,777 - #33 ;
INFO  10:43:50,777 - #41 {
INFO  10:43:50,777 - #13 void
INFO  10:43:50,778 - #45 f
INFO  10:43:50,778 - #37 (
INFO  10:43:50,778 - #45 char
INFO  10:43:50,778 - #45 ch
INFO  10:43:50,778 - #35 ,
INFO  10:43:50,778 - #45 int
INFO  10:43:50,778 - #45 a
INFO  10:43:50,778 - #35 ,
INFO  10:43:50,778 - #35 ,
ERROR 10:43:50,778 - 
Syntax Error on line 26
INFO  10:43:50,779 - #45 int
INFO  10:43:50,779 - #45 arg
INFO  10:43:50,779 - #38 )
INFO  10:43:50,779 - #45 int
INFO  10:43:50,779 - #45 x
INFO  10:43:50,780 - #33 ;
INFO  10:43:50,780 - #41 {
INFO  10:43:50,780 - #45 x
INFO  10:43:50,780 - #30 =
INFO  10:43:50,780 - #45 arg
INFO  10:43:50,780 - #33 ;
INFO  10:43:50,780 - #42 }
INFO  10:43:50,780 - #13 void
INFO  10:43:50,780 - #45 main
INFO  10:43:50,780 - #37 (
INFO  10:43:50,780 - #38 )
INFO  10:43:50,780 - #45 int
INFO  10:43:50,780 - #45 x
INFO  10:43:50,780 - #35 ,
INFO  10:43:50,780 - #45 i
INFO  10:43:50,780 - #33 ;
INFO  10:43:50,781 - #45 char
INFO  10:43:50,781 - #45 c
INFO  10:43:50,781 - #33 ;
INFO  10:43:50,781 - #45 int
INFO  10:43:50,781 - #45 arr
INFO  10:43:50,781 - #39 [
INFO  10:43:50,781 - #40 ]
INFO  10:43:50,781 - #33 ;
INFO  10:43:50,781 - #41 {
INFO  10:43:50,781 - #45 val
INFO  10:43:50,781 - #30 =
INFO  10:43:50,781 - #9 new
INFO  10:43:50,781 - #45 Table
INFO  10:43:50,781 - #37 (
INFO  10:43:50,782 - #44 2
INFO  10:43:50,782 - #38 )
INFO  10:43:50,782 - #33 ;
INFO  10:43:50,782 - #45 arr
INFO  10:43:50,782 - #30 =
INFO  10:43:50,782 - #9 new
INFO  10:43:50,782 - #45 int
INFO  10:43:50,783 - #39 [
INFO  10:43:50,783 - #44 3
INFO  10:43:50,783 - #40 ]
INFO  10:43:50,783 - #33 ;
INFO  10:43:50,783 - #45 i
INFO  10:43:50,783 - #30 =
INFO  10:43:50,783 - #44 0
INFO  10:43:50,783 - #33 ;
INFO  10:43:50,783 - #8 while
INFO  10:43:50,783 - #37 (
INFO  10:43:50,783 - #45 i
INFO  10:43:50,783 - #26 <
INFO  10:43:50,784 - #44 3
INFO  10:43:50,785 - #38 )
INFO  10:43:50,785 - #41 {
INFO  10:43:50,785 - #45 arr
INFO  10:43:50,785 - #39 [
INFO  10:43:50,785 - #45 i
INFO  10:43:50,785 - #40 ]
INFO  10:43:50,785 - #30 =
INFO  10:43:50,785 - #45 i
INFO  10:43:50,785 - #33 ;
INFO  10:43:50,785 - #45 i
INFO  10:43:50,785 - #31 ++
INFO  10:43:50,785 - #33 ;
INFO  10:43:50,785 - #42 }
INFO  10:43:50,785 - #45 arr
INFO  10:43:50,786 - #36 .
INFO  10:43:50,786 - #16 foreach
INFO  10:43:50,786 - #37 (
INFO  10:43:50,786 - #45 x
INFO  10:43:50,786 - #43 =>
INFO  10:43:50,786 - #10 print
INFO  10:43:50,786 - #37 (
INFO  10:43:50,786 - #45 x
INFO  10:43:50,786 - #38 )
INFO  10:43:50,786 - #33 ;
INFO  10:43:50,786 - #38 )
INFO  10:43:50,786 - #33 ;
INFO  10:43:50,786 - #45 val
INFO  10:43:50,786 - #36 .
INFO  10:43:50,786 - #45 pos
INFO  10:43:50,786 - #30 =
INFO  10:43:50,786 - #9 new
INFO  10:43:50,786 - #45 int
INFO  10:43:50,786 - #39 [
INFO  10:43:50,786 - #45 size
INFO  10:43:50,786 - #40 ]
INFO  10:43:50,787 - #33 ;
INFO  10:43:50,787 - #45 val
INFO  10:43:50,787 - #36 .
INFO  10:43:50,787 - #45 neg
INFO  10:43:50,787 - #30 =
INFO  10:43:50,787 - #9 new
INFO  10:43:50,787 - #45 int
INFO  10:43:50,787 - #39 [
INFO  10:43:50,787 - #45 size
INFO  10:43:50,787 - #40 ]
INFO  10:43:50,787 - #33 ;
INFO  10:43:50,787 - #11 read
INFO  10:43:50,787 - #37 (
INFO  10:43:50,787 - #45 x
INFO  10:43:50,787 - #38 )
INFO  10:43:50,787 - #33 ;
INFO  10:43:50,787 - #39 [
INFO  10:43:50,787 - #45 i
INFO  10:43:50,787 - #35 ,
INFO  10:43:50,787 - #45 x
INFO  10:43:50,787 - #40 ]
INFO  10:43:50,787 - #30 =
INFO  10:43:50,788 - #45 arr
INFO  10:43:50,788 - #33 ;
INFO  10:43:50,788 - #8 while
INFO  10:43:50,788 - #37 (
INFO  10:43:50,788 - #45 i
INFO  10:43:50,788 - #26 <
INFO  10:43:50,788 - #45 size
INFO  10:43:50,788 - #38 )
INFO  10:43:50,788 - #41 {
INFO  10:43:50,788 - #45 val
INFO  10:43:50,788 - #36 .
INFO  10:43:50,788 - #45 putp
INFO  10:43:50,788 - #37 (
INFO  10:43:50,788 - #44 0
INFO  10:43:50,788 - #35 ,
INFO  10:43:50,788 - #45 i
INFO  10:43:50,789 - #38 )
INFO  10:43:50,789 - #33 ;
INFO  10:43:50,789 - #45 val
INFO  10:43:50,789 - #36 .
INFO  10:43:50,789 - #45 putn
INFO  10:43:50,789 - #37 (
INFO  10:43:50,789 - #44 0
INFO  10:43:50,789 - #35 ,
INFO  10:43:50,789 - #45 i
INFO  10:43:50,789 - #38 )
INFO  10:43:50,789 - #33 ;
INFO  10:43:50,790 - #45 i
INFO  10:43:50,790 - #31 ++
INFO  10:43:50,790 - #33 ;
INFO  10:43:50,790 - #42 }
INFO  10:43:50,790 - #45 f
INFO  10:43:50,790 - #37 (
INFO  10:43:50,790 - #45 c
INFO  10:43:50,790 - #35 ,
INFO  10:43:50,790 - #45 x
INFO  10:43:50,790 - #35 ,
INFO  10:43:50,790 - #45 i
INFO  10:43:50,790 - #38 )
INFO  10:43:50,790 - #33 ;
INFO  10:43:50,790 - #11 read
INFO  10:43:50,790 - #37 (
INFO  10:43:50,790 - #45 rows
INFO  10:43:50,790 - #38 )
INFO  10:43:50,790 - #33 ;
INFO  10:43:50,790 - #45 x
INFO  10:43:50,790 - #30 =
INFO  10:43:50,790 - #45 rows
INFO  10:43:50,791 - #33 ;
INFO  10:43:50,791 - #8 while
INFO  10:43:50,791 - #37 (
INFO  10:43:50,791 - #46 true
INFO  10:43:50,791 - #38 )
INFO  10:43:50,791 - #41 {
INFO  10:43:50,791 - #7 if
INFO  10:43:50,791 - #37 (
INFO  10:43:50,791 - #45 x
INFO  10:43:50,791 - #27 <=
INFO  10:43:50,791 - #44 0
INFO  10:43:50,791 - #38 )
INFO  10:43:50,791 - #3 break
INFO  10:43:50,791 - #33 ;
INFO  10:43:50,791 - #7 if
INFO  10:43:50,791 - #37 (
INFO  10:43:50,791 - #44 0
INFO  10:43:50,791 - #27 <=
INFO  10:43:50,791 - #45 x
INFO  10:43:50,791 - #28 &&
INFO  10:43:50,791 - #45 x
INFO  10:43:50,791 - #26 <
INFO  10:43:50,791 - #45 size
INFO  10:43:50,791 - #38 )
INFO  10:43:50,791 - #41 {
INFO  10:43:50,791 - #45 val
INFO  10:43:50,791 - #36 .
INFO  10:43:50,791 - #45 putp
INFO  10:43:50,791 - #37 (
INFO  10:43:50,791 - #45 val
INFO  10:43:50,791 - #36 .
INFO  10:43:50,791 - #45 getp
INFO  10:43:50,791 - #37 (
INFO  10:43:50,793 - #45 x
INFO  10:43:50,793 - #38 )
INFO  10:43:50,793 - #17 +
INFO  10:43:50,793 - #44 1
INFO  10:43:50,793 - #38 )
INFO  10:43:50,793 - #33 ;
INFO  10:43:50,793 - #42 }
INFO  10:43:50,793 - #5 else
INFO  10:43:50,793 - #7 if
INFO  10:43:50,793 - #37 (
INFO  10:43:50,793 - #18 -
INFO  10:43:50,793 - #45 size
INFO  10:43:50,793 - #26 <
INFO  10:43:50,793 - #45 x
INFO  10:43:50,793 - #28 &&
INFO  10:43:50,793 - #45 x
INFO  10:43:50,794 - #26 <
INFO  10:43:50,794 - #44 0
INFO  10:43:50,794 - #38 )
INFO  10:43:50,794 - #41 {
INFO  10:43:50,794 - #45 val
INFO  10:43:50,794 - #36 .
INFO  10:43:50,795 - #45 putn
INFO  10:43:50,795 - #37 (
INFO  10:43:50,795 - #45 val
INFO  10:43:50,795 - #36 .
INFO  10:43:50,795 - #45 getn
INFO  10:43:50,795 - #37 (
INFO  10:43:50,795 - #18 -
INFO  10:43:50,795 - #45 x
INFO  10:43:50,795 - #38 )
INFO  10:43:50,795 - #17 +
INFO  10:43:50,795 - #44 1
INFO  10:43:50,795 - #38 )
INFO  10:43:50,795 - #33 ;
INFO  10:43:50,795 - #42 }
INFO  10:43:50,795 - #11 read
INFO  10:43:50,795 - #37 (
INFO  10:43:50,795 - #45 x
INFO  10:43:50,795 - #38 )
INFO  10:43:50,796 - #33 ;
INFO  10:43:50,796 - #42 }
INFO  10:43:50,796 - #42 }
INFO  10:43:50,796 - #42 }
ERROR 10:43:50,796 - Fatal error, parsing will not continue on line 60
