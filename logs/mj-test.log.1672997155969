INFO  10:24:40,998 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:24:41,025 - #2 program
INFO  10:24:41,025 - #45 p
INFO  10:24:41,025 - #6 const
INFO  10:24:41,025 - #45 int
INFO  10:24:41,025 - #45 size
INFO  10:24:41,026 - #30 =
INFO  10:24:41,026 - #44 10
INFO  10:24:41,026 - #33 ;
INFO  10:24:41,027 - #4 class
INFO  10:24:41,028 - #45 Table
INFO  10:24:41,028 - #14 extends
INFO  10:24:41,028 - #17 +
ERROR 10:24:41,028 - 
Syntax Error on line 3
INFO  10:24:41,028 - #18 -
INFO  10:24:41,029 - #44 1231
INFO  10:24:41,029 - #41 {
INFO  10:24:41,030 - #45 int
INFO  10:24:41,030 - #45 pos
INFO  10:24:41,030 - #39 [
INFO  10:24:41,030 - #40 ]
INFO  10:24:41,031 - #35 ,
INFO  10:24:41,040 - #45 neg
INFO  10:24:41,040 - #39 [
INFO  10:24:41,040 - #40 ]
INFO  10:24:41,040 - #35 ,
INFO  10:24:41,040 - #45 factor
INFO  10:24:41,040 - #33 ;
INFO  10:24:41,040 - #41 {
INFO  10:24:41,040 - #45 Table
INFO  10:24:41,040 - #37 (
INFO  10:24:41,040 - #45 int
INFO  10:24:41,040 - #45 factor
INFO  10:24:41,040 - #38 )
INFO  10:24:41,040 - #41 {
INFO  10:24:41,040 - #45 this
INFO  10:24:41,040 - #36 .
INFO  10:24:41,041 - #45 factor
INFO  10:24:41,041 - #30 =
INFO  10:24:41,041 - #45 factor
INFO  10:24:41,041 - #33 ;
INFO  10:24:41,041 - #42 }
INFO  10:24:41,041 - #13 void
INFO  10:24:41,041 - #45 putp
INFO  10:24:41,041 - #37 (
INFO  10:24:41,041 - #45 int
INFO  10:24:41,041 - #45 a
INFO  10:24:41,041 - #35 ,
INFO  10:24:41,041 - #45 int
INFO  10:24:41,041 - #45 idx
INFO  10:24:41,041 - #38 )
INFO  10:24:41,042 - #41 {
INFO  10:24:41,042 - #45 this
INFO  10:24:41,042 - #36 .
INFO  10:24:41,042 - #45 pos
INFO  10:24:41,042 - #39 [
INFO  10:24:41,042 - #45 idx
INFO  10:24:41,042 - #40 ]
INFO  10:24:41,042 - #30 =
INFO  10:24:41,042 - #45 a
INFO  10:24:41,042 - #33 ;
INFO  10:24:41,042 - #42 }
INFO  10:24:41,042 - #13 void
INFO  10:24:41,043 - #45 putn
INFO  10:24:41,043 - #37 (
INFO  10:24:41,043 - #45 int
INFO  10:24:41,043 - #45 a
INFO  10:24:41,043 - #35 ,
INFO  10:24:41,043 - #45 int
INFO  10:24:41,043 - #45 idx
INFO  10:24:41,043 - #38 )
INFO  10:24:41,043 - #41 {
INFO  10:24:41,043 - #45 this
INFO  10:24:41,043 - #36 .
INFO  10:24:41,043 - #45 neg
INFO  10:24:41,043 - #39 [
INFO  10:24:41,043 - #45 idx
INFO  10:24:41,044 - #40 ]
INFO  10:24:41,044 - #30 =
INFO  10:24:41,044 - #45 a
INFO  10:24:41,044 - #33 ;
INFO  10:24:41,044 - #42 }
INFO  10:24:41,044 - #45 int
INFO  10:24:41,044 - #45 getp
INFO  10:24:41,044 - #37 (
INFO  10:24:41,044 - #45 int
INFO  10:24:41,044 - #45 idx
INFO  10:24:41,044 - #38 )
INFO  10:24:41,044 - #41 {
INFO  10:24:41,044 - #12 return
INFO  10:24:41,044 - #45 pos
INFO  10:24:41,044 - #39 [
INFO  10:24:41,045 - #45 idx
INFO  10:24:41,045 - #40 ]
INFO  10:24:41,045 - #33 ;
INFO  10:24:41,045 - #42 }
INFO  10:24:41,045 - #45 int
INFO  10:24:41,045 - #45 getn
INFO  10:24:41,045 - #37 (
INFO  10:24:41,045 - #45 int
INFO  10:24:41,045 - #45 idx
INFO  10:24:41,045 - #38 )
INFO  10:24:41,045 - #41 {
INFO  10:24:41,045 - #12 return
INFO  10:24:41,045 - #45 neg
INFO  10:24:41,045 - #39 [
INFO  10:24:41,045 - #45 idx
INFO  10:24:41,045 - #40 ]
INFO  10:24:41,046 - #33 ;
INFO  10:24:41,046 - #42 }
INFO  10:24:41,046 - #42 }
INFO  10:24:41,046 - #42 }
INFO  10:24:41,046 - #45 Table
INFO  10:24:41,046 - #45 val
INFO  10:24:41,046 - #33 ;
INFO  10:24:41,046 - #45 Int
INFO  10:24:41,046 - #45 rows
INFO  10:24:41,046 - #35 ,
INFO  10:24:41,046 - #45 columns
INFO  10:24:41,046 - #33 ;
INFO  10:24:41,046 - #41 {
INFO  10:24:41,046 - #13 void
INFO  10:24:41,046 - #45 f
INFO  10:24:41,046 - #37 (
INFO  10:24:41,046 - #45 char
INFO  10:24:41,047 - #45 ch
INFO  10:24:41,047 - #35 ,
INFO  10:24:41,047 - #45 int
INFO  10:24:41,047 - #45 a
INFO  10:24:41,047 - #35 ,
INFO  10:24:41,047 - #45 int
INFO  10:24:41,047 - #45 arg
INFO  10:24:41,047 - #38 )
INFO  10:24:41,047 - #45 int
INFO  10:24:41,047 - #45 x
INFO  10:24:41,047 - #33 ;
INFO  10:24:41,047 - #41 {
INFO  10:24:41,048 - #45 x
INFO  10:24:41,048 - #30 =
INFO  10:24:41,048 - #45 arg
INFO  10:24:41,048 - #33 ;
INFO  10:24:41,048 - #42 }
INFO  10:24:41,048 - #13 void
INFO  10:24:41,048 - #45 main
INFO  10:24:41,048 - #37 (
INFO  10:24:41,048 - #38 )
INFO  10:24:41,048 - #45 int
INFO  10:24:41,048 - #45 x
INFO  10:24:41,048 - #35 ,
INFO  10:24:41,048 - #45 i
INFO  10:24:41,048 - #33 ;
INFO  10:24:41,048 - #45 char
INFO  10:24:41,049 - #45 c
INFO  10:24:41,049 - #35 ,
INFO  10:24:41,049 - #45 int
INFO  10:24:41,049 - #45 arr
INFO  10:24:41,049 - #39 [
INFO  10:24:41,049 - #40 ]
INFO  10:24:41,049 - #33 ;
INFO  10:24:41,049 - #41 {
INFO  10:24:41,049 - #45 val
INFO  10:24:41,049 - #30 =
INFO  10:24:41,049 - #9 new
INFO  10:24:41,049 - #45 Table
INFO  10:24:41,049 - #37 (
INFO  10:24:41,049 - #44 2
INFO  10:24:41,049 - #38 )
INFO  10:24:41,049 - #33 ;
INFO  10:24:41,049 - #45 arr
INFO  10:24:41,049 - #30 =
INFO  10:24:41,049 - #9 new
INFO  10:24:41,050 - #45 int
INFO  10:24:41,050 - #39 [
INFO  10:24:41,050 - #44 3
INFO  10:24:41,050 - #40 ]
INFO  10:24:41,050 - #33 ;
INFO  10:24:41,050 - #45 i
INFO  10:24:41,050 - #30 =
INFO  10:24:41,050 - #44 0
INFO  10:24:41,050 - #33 ;
INFO  10:24:41,050 - #8 while
INFO  10:24:41,050 - #37 (
INFO  10:24:41,050 - #45 i
INFO  10:24:41,050 - #26 <
INFO  10:24:41,050 - #44 3
INFO  10:24:41,050 - #38 )
INFO  10:24:41,050 - #41 {
INFO  10:24:41,050 - #45 arr
INFO  10:24:41,051 - #39 [
INFO  10:24:41,051 - #45 i
INFO  10:24:41,051 - #40 ]
INFO  10:24:41,051 - #30 =
INFO  10:24:41,051 - #45 i
INFO  10:24:41,051 - #33 ;
INFO  10:24:41,051 - #45 i
INFO  10:24:41,051 - #31 ++
INFO  10:24:41,051 - #33 ;
INFO  10:24:41,051 - #42 }
INFO  10:24:41,051 - #45 arr
INFO  10:24:41,051 - #36 .
INFO  10:24:41,051 - #16 foreach
INFO  10:24:41,051 - #37 (
INFO  10:24:41,051 - #45 x
INFO  10:24:41,051 - #43 =>
INFO  10:24:41,051 - #10 print
INFO  10:24:41,051 - #37 (
INFO  10:24:41,052 - #45 x
INFO  10:24:41,052 - #38 )
INFO  10:24:41,052 - #33 ;
INFO  10:24:41,052 - #38 )
INFO  10:24:41,052 - #33 ;
INFO  10:24:41,052 - #45 val
INFO  10:24:41,052 - #36 .
INFO  10:24:41,052 - #45 pos
INFO  10:24:41,052 - #30 =
INFO  10:24:41,052 - #9 new
INFO  10:24:41,052 - #45 int
INFO  10:24:41,052 - #39 [
INFO  10:24:41,052 - #45 size
INFO  10:24:41,052 - #40 ]
INFO  10:24:41,052 - #33 ;
INFO  10:24:41,052 - #45 val
INFO  10:24:41,052 - #36 .
INFO  10:24:41,052 - #45 neg
INFO  10:24:41,052 - #30 =
INFO  10:24:41,052 - #9 new
INFO  10:24:41,052 - #45 int
INFO  10:24:41,052 - #39 [
INFO  10:24:41,052 - #45 size
INFO  10:24:41,052 - #40 ]
INFO  10:24:41,053 - #33 ;
INFO  10:24:41,053 - #11 read
INFO  10:24:41,053 - #37 (
INFO  10:24:41,053 - #45 x
INFO  10:24:41,053 - #38 )
INFO  10:24:41,053 - #33 ;
INFO  10:24:41,053 - #39 [
INFO  10:24:41,053 - #45 i
INFO  10:24:41,053 - #35 ,
INFO  10:24:41,053 - #35 ,
INFO  10:24:41,053 - #45 x
INFO  10:24:41,053 - #40 ]
INFO  10:24:41,053 - #30 =
INFO  10:24:41,053 - #45 arr
INFO  10:24:41,053 - #33 ;
INFO  10:24:41,053 - #8 while
INFO  10:24:41,053 - #37 (
INFO  10:24:41,053 - #45 i
INFO  10:24:41,053 - #26 <
INFO  10:24:41,053 - #45 size
INFO  10:24:41,053 - #38 )
INFO  10:24:41,053 - #41 {
INFO  10:24:41,053 - #45 val
INFO  10:24:41,053 - #36 .
INFO  10:24:41,053 - #45 putp
INFO  10:24:41,053 - #37 (
INFO  10:24:41,054 - #44 0
INFO  10:24:41,054 - #35 ,
INFO  10:24:41,054 - #45 i
INFO  10:24:41,054 - #38 )
INFO  10:24:41,054 - #33 ;
INFO  10:24:41,054 - #45 val
INFO  10:24:41,054 - #36 .
INFO  10:24:41,054 - #45 putn
INFO  10:24:41,054 - #37 (
INFO  10:24:41,054 - #44 0
INFO  10:24:41,054 - #35 ,
INFO  10:24:41,054 - #45 i
INFO  10:24:41,054 - #38 )
INFO  10:24:41,054 - #33 ;
INFO  10:24:41,054 - #45 i
INFO  10:24:41,054 - #31 ++
INFO  10:24:41,054 - #33 ;
INFO  10:24:41,054 - #42 }
INFO  10:24:41,054 - #45 f
INFO  10:24:41,054 - #37 (
INFO  10:24:41,054 - #45 c
INFO  10:24:41,054 - #35 ,
INFO  10:24:41,054 - #45 x
INFO  10:24:41,055 - #35 ,
INFO  10:24:41,055 - #45 i
INFO  10:24:41,055 - #38 )
INFO  10:24:41,055 - #33 ;
INFO  10:24:41,055 - #11 read
INFO  10:24:41,055 - #37 (
INFO  10:24:41,055 - #45 rows
INFO  10:24:41,055 - #38 )
INFO  10:24:41,055 - #33 ;
INFO  10:24:41,055 - #45 x
INFO  10:24:41,055 - #30 =
INFO  10:24:41,055 - #45 rows
INFO  10:24:41,055 - #33 ;
INFO  10:24:41,055 - #8 while
INFO  10:24:41,055 - #37 (
INFO  10:24:41,056 - #46 true
INFO  10:24:41,056 - #38 )
INFO  10:24:41,056 - #41 {
INFO  10:24:41,056 - #7 if
INFO  10:24:41,056 - #37 (
INFO  10:24:41,056 - #45 x
INFO  10:24:41,056 - #27 <=
INFO  10:24:41,056 - #44 0
INFO  10:24:41,056 - #38 )
INFO  10:24:41,056 - #3 break
INFO  10:24:41,056 - #33 ;
INFO  10:24:41,056 - #7 if
INFO  10:24:41,056 - #37 (
INFO  10:24:41,056 - #44 0
INFO  10:24:41,056 - #27 <=
INFO  10:24:41,056 - #45 x
INFO  10:24:41,056 - #28 &&
INFO  10:24:41,056 - #45 x
INFO  10:24:41,056 - #26 <
INFO  10:24:41,056 - #45 size
INFO  10:24:41,056 - #38 )
INFO  10:24:41,057 - #41 {
INFO  10:24:41,057 - #45 val
INFO  10:24:41,057 - #36 .
INFO  10:24:41,057 - #45 putp
INFO  10:24:41,057 - #37 (
INFO  10:24:41,057 - #45 val
INFO  10:24:41,057 - #36 .
INFO  10:24:41,057 - #45 getp
INFO  10:24:41,057 - #37 (
INFO  10:24:41,057 - #45 x
INFO  10:24:41,057 - #38 )
INFO  10:24:41,057 - #17 +
INFO  10:24:41,057 - #44 1
INFO  10:24:41,058 - #38 )
INFO  10:24:41,058 - #33 ;
INFO  10:24:41,058 - #42 }
INFO  10:24:41,058 - #5 else
INFO  10:24:41,058 - #7 if
INFO  10:24:41,058 - #37 (
INFO  10:24:41,059 - #18 -
INFO  10:24:41,059 - #45 size
INFO  10:24:41,059 - #26 <
INFO  10:24:41,059 - #45 x
INFO  10:24:41,059 - #28 &&
INFO  10:24:41,059 - #45 x
INFO  10:24:41,059 - #26 <
INFO  10:24:41,059 - #44 0
INFO  10:24:41,059 - #38 )
INFO  10:24:41,059 - #41 {
INFO  10:24:41,059 - #45 val
INFO  10:24:41,059 - #36 .
INFO  10:24:41,059 - #45 putn
INFO  10:24:41,059 - #37 (
INFO  10:24:41,059 - #45 val
INFO  10:24:41,059 - #36 .
INFO  10:24:41,059 - #45 getn
INFO  10:24:41,059 - #37 (
INFO  10:24:41,059 - #18 -
INFO  10:24:41,059 - #45 x
INFO  10:24:41,059 - #38 )
INFO  10:24:41,059 - #17 +
INFO  10:24:41,060 - #44 1
INFO  10:24:41,060 - #38 )
INFO  10:24:41,060 - #33 ;
INFO  10:24:41,060 - #42 }
INFO  10:24:41,060 - #11 read
INFO  10:24:41,060 - #37 (
INFO  10:24:41,060 - #45 x
INFO  10:24:41,060 - #38 )
INFO  10:24:41,060 - #33 ;
INFO  10:24:41,060 - #42 }
INFO  10:24:41,060 - #42 }
INFO  10:24:41,060 - #42 }
ERROR 10:24:41,060 - Fatal error, parsing will not continue on line 58
