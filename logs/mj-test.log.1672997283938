INFO  10:27:53,827 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:27:53,864 - #2 program
INFO  10:27:53,864 - #45 p
INFO  10:27:53,864 - #6 const
INFO  10:27:53,865 - #45 int
INFO  10:27:53,865 - #45 size
INFO  10:27:53,865 - #30 =
INFO  10:27:53,865 - #44 10
INFO  10:27:53,865 - #33 ;
INFO  10:27:53,866 - #4 class
INFO  10:27:53,867 - #45 Table
INFO  10:27:53,867 - #14 extends
INFO  10:27:53,867 - #45 Dusan
INFO  10:27:53,867 - #41 {
INFO  10:27:53,867 - #45 int
INFO  10:27:53,869 - #45 pos
INFO  10:27:53,869 - #39 [
INFO  10:27:53,869 - #40 ]
INFO  10:27:53,869 - #35 ,
INFO  10:27:53,871 - #45 neg
INFO  10:27:53,871 - #39 [
INFO  10:27:53,871 - #40 ]
INFO  10:27:53,880 - #35 ,
INFO  10:27:53,880 - #45 factor
INFO  10:27:53,880 - #33 ;
INFO  10:27:53,881 - #41 {
INFO  10:27:53,881 - #45 Table
INFO  10:27:53,881 - #37 (
INFO  10:27:53,881 - #45 int
INFO  10:27:53,881 - #45 factor
INFO  10:27:53,881 - #38 )
INFO  10:27:53,882 - #41 {
INFO  10:27:53,882 - #45 this
INFO  10:27:53,883 - #36 .
INFO  10:27:53,883 - #45 factor
INFO  10:27:53,884 - #30 =
INFO  10:27:53,884 - #45 factor
INFO  10:27:53,885 - #33 ;
INFO  10:27:53,885 - #42 }
INFO  10:27:53,885 - #13 void
INFO  10:27:53,886 - #45 putp
INFO  10:27:53,887 - #37 (
INFO  10:27:53,887 - #45 int
INFO  10:27:53,887 - #45 a
INFO  10:27:53,887 - #35 ,
INFO  10:27:53,887 - #45 int
INFO  10:27:53,887 - #45 idx
INFO  10:27:53,887 - #38 )
INFO  10:27:53,888 - #41 {
INFO  10:27:53,889 - #45 this
INFO  10:27:53,889 - #36 .
INFO  10:27:53,889 - #45 pos
INFO  10:27:53,889 - #39 [
INFO  10:27:53,889 - #45 idx
INFO  10:27:53,889 - #40 ]
INFO  10:27:53,889 - #30 =
INFO  10:27:53,889 - #45 a
INFO  10:27:53,889 - #33 ;
INFO  10:27:53,890 - #42 }
INFO  10:27:53,890 - #13 void
INFO  10:27:53,890 - #45 putn
INFO  10:27:53,890 - #37 (
INFO  10:27:53,890 - #45 int
INFO  10:27:53,890 - #45 a
INFO  10:27:53,890 - #35 ,
INFO  10:27:53,891 - #45 int
INFO  10:27:53,891 - #45 idx
INFO  10:27:53,891 - #38 )
INFO  10:27:53,891 - #41 {
INFO  10:27:53,891 - #45 this
INFO  10:27:53,891 - #36 .
INFO  10:27:53,891 - #45 neg
INFO  10:27:53,891 - #39 [
INFO  10:27:53,891 - #45 idx
INFO  10:27:53,891 - #40 ]
INFO  10:27:53,891 - #30 =
INFO  10:27:53,891 - #45 a
INFO  10:27:53,891 - #33 ;
INFO  10:27:53,891 - #42 }
INFO  10:27:53,891 - #45 int
INFO  10:27:53,891 - #45 getp
INFO  10:27:53,892 - #37 (
INFO  10:27:53,892 - #45 int
INFO  10:27:53,892 - #45 idx
INFO  10:27:53,892 - #38 )
INFO  10:27:53,892 - #41 {
INFO  10:27:53,892 - #12 return
INFO  10:27:53,892 - #45 pos
INFO  10:27:53,892 - #39 [
INFO  10:27:53,892 - #45 idx
INFO  10:27:53,892 - #40 ]
INFO  10:27:53,892 - #33 ;
INFO  10:27:53,892 - #42 }
INFO  10:27:53,893 - #45 int
INFO  10:27:53,893 - #45 getn
INFO  10:27:53,893 - #37 (
INFO  10:27:53,893 - #45 int
INFO  10:27:53,893 - #45 idx
INFO  10:27:53,893 - #38 )
INFO  10:27:53,893 - #41 {
INFO  10:27:53,893 - #12 return
INFO  10:27:53,893 - #45 neg
INFO  10:27:53,893 - #39 [
INFO  10:27:53,894 - #45 idx
INFO  10:27:53,894 - #40 ]
INFO  10:27:53,894 - #33 ;
INFO  10:27:53,894 - #42 }
INFO  10:27:53,894 - #42 }
INFO  10:27:53,894 - #42 }
INFO  10:27:53,894 - #45 Table
INFO  10:27:53,897 - #45 val
INFO  10:27:53,897 - #33 ;
INFO  10:27:53,897 - #45 Int
INFO  10:27:53,898 - #45 rows
INFO  10:27:53,898 - #35 ,
INFO  10:27:53,898 - #45 columns
INFO  10:27:53,898 - #33 ;
INFO  10:27:53,898 - #41 {
INFO  10:27:53,898 - #13 void
INFO  10:27:53,899 - #45 f
INFO  10:27:53,899 - #37 (
INFO  10:27:53,899 - #45 char
INFO  10:27:53,899 - #45 ch
INFO  10:27:53,899 - #35 ,
INFO  10:27:53,899 - #45 int
INFO  10:27:53,899 - #45 a
INFO  10:27:53,899 - #35 ,
INFO  10:27:53,899 - #45 int
INFO  10:27:53,899 - #45 arg
INFO  10:27:53,899 - #38 )
INFO  10:27:53,899 - #45 int
INFO  10:27:53,899 - #45 x
INFO  10:27:53,900 - #33 ;
INFO  10:27:53,900 - #41 {
INFO  10:27:53,900 - #45 x
INFO  10:27:53,900 - #30 =
INFO  10:27:53,900 - #45 arg
INFO  10:27:53,900 - #33 ;
INFO  10:27:53,900 - #42 }
INFO  10:27:53,900 - #13 void
INFO  10:27:53,900 - #45 main
INFO  10:27:53,900 - #37 (
INFO  10:27:53,900 - #38 )
INFO  10:27:53,901 - #45 int
INFO  10:27:53,901 - #45 x
INFO  10:27:53,901 - #35 ,
INFO  10:27:53,902 - #45 i
INFO  10:27:53,902 - #33 ;
INFO  10:27:53,902 - #45 char
INFO  10:27:53,902 - #45 c
INFO  10:27:53,902 - #35 ,
INFO  10:27:53,902 - #45 int
INFO  10:27:53,902 - #45 arr
ERROR 10:27:53,902 - 
Syntax Error on line 27
INFO  10:27:53,902 - #39 [
INFO  10:27:53,902 - #40 ]
INFO  10:27:53,902 - #33 ;
INFO  10:27:53,903 - #41 {
INFO  10:27:53,903 - #45 val
INFO  10:27:53,903 - #30 =
INFO  10:27:53,903 - #9 new
INFO  10:27:53,903 - #45 Table
INFO  10:27:53,904 - #37 (
INFO  10:27:53,904 - #44 2
INFO  10:27:53,904 - #38 )
INFO  10:27:53,904 - #33 ;
INFO  10:27:53,904 - #45 arr
INFO  10:27:53,904 - #30 =
INFO  10:27:53,904 - #9 new
INFO  10:27:53,904 - #45 int
INFO  10:27:53,904 - #39 [
INFO  10:27:53,904 - #44 3
INFO  10:27:53,904 - #40 ]
INFO  10:27:53,904 - #33 ;
INFO  10:27:53,904 - #45 i
INFO  10:27:53,904 - #30 =
INFO  10:27:53,904 - #44 0
INFO  10:27:53,904 - #33 ;
INFO  10:27:53,904 - #8 while
INFO  10:27:53,904 - #37 (
INFO  10:27:53,904 - #45 i
INFO  10:27:53,904 - #26 <
INFO  10:27:53,904 - #44 3
INFO  10:27:53,904 - #38 )
INFO  10:27:53,905 - #41 {
INFO  10:27:53,905 - #45 arr
INFO  10:27:53,905 - #39 [
INFO  10:27:53,905 - #45 i
INFO  10:27:53,905 - #40 ]
INFO  10:27:53,905 - #30 =
INFO  10:27:53,905 - #45 i
INFO  10:27:53,905 - #33 ;
INFO  10:27:53,905 - #45 i
INFO  10:27:53,905 - #31 ++
INFO  10:27:53,905 - #33 ;
INFO  10:27:53,905 - #42 }
INFO  10:27:53,905 - #45 arr
INFO  10:27:53,905 - #36 .
INFO  10:27:53,906 - #16 foreach
INFO  10:27:53,906 - #37 (
INFO  10:27:53,906 - #45 x
INFO  10:27:53,906 - #43 =>
INFO  10:27:53,906 - #10 print
INFO  10:27:53,906 - #37 (
INFO  10:27:53,906 - #45 x
INFO  10:27:53,906 - #38 )
INFO  10:27:53,906 - #33 ;
INFO  10:27:53,906 - #38 )
INFO  10:27:53,908 - #33 ;
INFO  10:27:53,908 - #45 val
INFO  10:27:53,908 - #36 .
INFO  10:27:53,908 - #45 pos
INFO  10:27:53,908 - #30 =
INFO  10:27:53,908 - #9 new
INFO  10:27:53,908 - #45 int
INFO  10:27:53,908 - #39 [
INFO  10:27:53,908 - #45 size
INFO  10:27:53,908 - #40 ]
INFO  10:27:53,908 - #33 ;
INFO  10:27:53,908 - #45 val
INFO  10:27:53,908 - #36 .
INFO  10:27:53,908 - #45 neg
INFO  10:27:53,908 - #30 =
INFO  10:27:53,908 - #9 new
INFO  10:27:53,908 - #45 int
INFO  10:27:53,908 - #39 [
INFO  10:27:53,909 - #45 size
INFO  10:27:53,909 - #40 ]
INFO  10:27:53,909 - #33 ;
INFO  10:27:53,909 - #11 read
INFO  10:27:53,909 - #37 (
INFO  10:27:53,909 - #45 x
INFO  10:27:53,909 - #38 )
INFO  10:27:53,909 - #33 ;
INFO  10:27:53,909 - #39 [
INFO  10:27:53,909 - #45 i
INFO  10:27:53,909 - #35 ,
INFO  10:27:53,909 - #35 ,
INFO  10:27:53,909 - #45 x
INFO  10:27:53,909 - #40 ]
ERROR 10:27:53,909 - Recovery done on , line 31
ERROR 10:27:53,909 - 
Syntax Error on line 39
INFO  10:27:53,909 - #30 =
INFO  10:27:53,909 - #45 arr
INFO  10:27:53,911 - #33 ;
INFO  10:27:53,911 - #8 while
INFO  10:27:53,911 - #37 (
INFO  10:27:53,911 - #45 i
INFO  10:27:53,911 - #26 <
INFO  10:27:53,911 - #45 size
INFO  10:27:53,911 - #38 )
INFO  10:27:53,911 - #41 {
INFO  10:27:53,911 - #45 val
INFO  10:27:53,911 - #36 .
INFO  10:27:53,911 - #45 putp
INFO  10:27:53,911 - #37 (
INFO  10:27:53,911 - #44 0
INFO  10:27:53,911 - #35 ,
INFO  10:27:53,911 - #45 i
INFO  10:27:53,911 - #38 )
INFO  10:27:53,911 - #33 ;
INFO  10:27:53,911 - #45 val
INFO  10:27:53,912 - #36 .
INFO  10:27:53,912 - #45 putn
INFO  10:27:53,912 - #37 (
INFO  10:27:53,912 - #44 0
INFO  10:27:53,912 - #35 ,
INFO  10:27:53,912 - #45 i
INFO  10:27:53,912 - #38 )
INFO  10:27:53,912 - #33 ;
INFO  10:27:53,912 - #45 i
INFO  10:27:53,912 - #31 ++
INFO  10:27:53,912 - #33 ;
INFO  10:27:53,912 - #42 }
INFO  10:27:53,912 - #45 f
INFO  10:27:53,912 - #37 (
INFO  10:27:53,912 - #45 c
INFO  10:27:53,912 - #35 ,
INFO  10:27:53,913 - #45 x
INFO  10:27:53,913 - #35 ,
INFO  10:27:53,913 - #45 i
INFO  10:27:53,913 - #38 )
INFO  10:27:53,913 - #33 ;
INFO  10:27:53,913 - #11 read
INFO  10:27:53,913 - #37 (
INFO  10:27:53,913 - #45 rows
INFO  10:27:53,913 - #38 )
INFO  10:27:53,913 - #33 ;
INFO  10:27:53,913 - #45 x
INFO  10:27:53,913 - #30 =
INFO  10:27:53,913 - #45 rows
INFO  10:27:53,913 - #33 ;
INFO  10:27:53,913 - #8 while
INFO  10:27:53,914 - #37 (
INFO  10:27:53,914 - #46 true
INFO  10:27:53,914 - #38 )
INFO  10:27:53,914 - #41 {
INFO  10:27:53,914 - #7 if
INFO  10:27:53,914 - #37 (
INFO  10:27:53,914 - #45 x
INFO  10:27:53,914 - #27 <=
INFO  10:27:53,914 - #44 0
INFO  10:27:53,914 - #38 )
INFO  10:27:53,914 - #3 break
INFO  10:27:53,915 - #33 ;
INFO  10:27:53,915 - #7 if
INFO  10:27:53,915 - #37 (
INFO  10:27:53,915 - #44 0
INFO  10:27:53,915 - #27 <=
INFO  10:27:53,915 - #45 x
INFO  10:27:53,915 - #28 &&
INFO  10:27:53,915 - #45 x
INFO  10:27:53,915 - #26 <
INFO  10:27:53,915 - #45 size
INFO  10:27:53,915 - #38 )
INFO  10:27:53,915 - #41 {
INFO  10:27:53,915 - #45 val
INFO  10:27:53,915 - #36 .
INFO  10:27:53,915 - #45 putp
INFO  10:27:53,915 - #37 (
INFO  10:27:53,917 - #45 val
INFO  10:27:53,917 - #36 .
INFO  10:27:53,917 - #45 getp
INFO  10:27:53,917 - #37 (
INFO  10:27:53,917 - #45 x
INFO  10:27:53,917 - #38 )
INFO  10:27:53,917 - #17 +
INFO  10:27:53,917 - #44 1
INFO  10:27:53,918 - #38 )
INFO  10:27:53,918 - #33 ;
INFO  10:27:53,918 - #42 }
INFO  10:27:53,918 - #5 else
INFO  10:27:53,918 - #7 if
INFO  10:27:53,918 - #37 (
INFO  10:27:53,918 - #18 -
INFO  10:27:53,918 - #45 size
INFO  10:27:53,918 - #26 <
INFO  10:27:53,918 - #45 x
INFO  10:27:53,918 - #28 &&
INFO  10:27:53,918 - #45 x
INFO  10:27:53,918 - #26 <
INFO  10:27:53,918 - #44 0
INFO  10:27:53,918 - #38 )
INFO  10:27:53,918 - #41 {
INFO  10:27:53,918 - #45 val
INFO  10:27:53,918 - #36 .
INFO  10:27:53,918 - #45 putn
INFO  10:27:53,918 - #37 (
INFO  10:27:53,918 - #45 val
INFO  10:27:53,919 - #36 .
INFO  10:27:53,919 - #45 getn
INFO  10:27:53,919 - #37 (
INFO  10:27:53,919 - #18 -
INFO  10:27:53,919 - #45 x
INFO  10:27:53,919 - #38 )
INFO  10:27:53,919 - #17 +
INFO  10:27:53,919 - #44 1
INFO  10:27:53,919 - #38 )
INFO  10:27:53,919 - #33 ;
INFO  10:27:53,919 - #42 }
INFO  10:27:53,919 - #11 read
INFO  10:27:53,920 - #37 (
INFO  10:27:53,920 - #45 x
INFO  10:27:53,920 - #38 )
INFO  10:27:53,920 - #33 ;
INFO  10:27:53,920 - #42 }
INFO  10:27:53,920 - #42 }
INFO  10:27:53,920 - #42 }
ERROR 10:27:53,920 - Fatal error, parsing will not continue on line 58
