INFO  23:13:41,929 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  23:13:41,958 - #2 program
INFO  23:13:41,959 - #46 MJProgram
INFO  23:13:41,959 - #46 int
INFO  23:13:41,960 - #46 x
INFO  23:13:41,960 - #33 ;
INFO  23:13:41,961 - #46 int
INFO  23:13:41,962 - #46 y
INFO  23:13:41,962 - #33 ;
INFO  23:13:41,962 - #41 {
INFO  23:13:41,962 - #46 int
INFO  23:13:41,963 - #46 k
INFO  23:13:41,963 - #37 (
INFO  23:13:41,963 - #46 int
INFO  23:13:41,963 - #46 y
INFO  23:13:41,963 - #38 )
INFO  23:13:41,964 - #46 int
INFO  23:13:41,965 - #46 c
INFO  23:13:41,965 - #33 ;
INFO  23:13:41,965 - #41 {
INFO  23:13:41,965 - #46 c
INFO  23:13:41,966 - #30 =
INFO  23:13:41,966 - #44 1
INFO  23:13:41,967 - #33 ;
INFO  23:13:41,967 - #12 return
INFO  23:13:41,968 - #46 c
INFO  23:13:41,968 - #17 +
INFO  23:13:41,968 - #44 2
INFO  23:13:41,969 - #33 ;
INFO  23:13:41,969 - #42 }
INFO  23:13:41,969 - #13 void
INFO  23:13:41,970 - #46 main
INFO  23:13:41,970 - #37 (
INFO  23:13:41,970 - #38 )
INFO  23:13:41,970 - #41 {
INFO  23:13:41,970 - #46 y
INFO  23:13:41,970 - #30 =
INFO  23:13:41,970 - #44 2
INFO  23:13:41,970 - #33 ;
INFO  23:13:41,970 - #46 x
INFO  23:13:41,971 - #30 =
INFO  23:13:41,971 - #46 y
INFO  23:13:41,971 - #17 +
INFO  23:13:41,971 - #44 2
INFO  23:13:41,971 - #33 ;
INFO  23:13:41,971 - #46 y
INFO  23:13:41,971 - #30 =
INFO  23:13:41,971 - #46 k
INFO  23:13:41,971 - #37 (
INFO  23:13:41,971 - #38 )
INFO  23:13:41,971 - #17 +
INFO  23:13:41,971 - #44 3
INFO  23:13:41,971 - #33 ;
INFO  23:13:41,973 - #3 break
INFO  23:13:41,973 - #33 ;
INFO  23:13:41,973 - #8 while
INFO  23:13:41,973 - #37 (
INFO  23:13:41,973 - #47 true
INFO  23:13:41,973 - #38 )
INFO  23:13:41,974 - #41 {
INFO  23:13:41,974 - #42 }
INFO  23:13:41,974 - #10 print
INFO  23:13:41,974 - #37 (
INFO  23:13:41,974 - #46 y
INFO  23:13:41,974 - #38 )
INFO  23:13:41,974 - #33 ;
INFO  23:13:41,974 - #12 return
INFO  23:13:41,975 - #33 ;
INFO  23:13:41,975 - #42 }
INFO  23:13:41,976 - #42 }
INFO  23:13:41,980 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      NoDeclarations(
      ) [NoDeclarations]
      VarDecl(
        Type(
         int
        ) [Type]
        ListNoVarDecls(
          LastVarDeclaration(
            VarName(
             x
              NoVarBrackets(
              ) [NoVarBrackets]
            ) [VarName]
          ) [LastVarDeclaration]
        ) [ListNoVarDecls]
      ) [VarDecl]
    ) [VarDeclarations]
    VarDecl(
      Type(
       int
      ) [Type]
      ListNoVarDecls(
        LastVarDeclaration(
          VarName(
           y
            NoVarBrackets(
            ) [NoVarBrackets]
          ) [VarName]
        ) [LastVarDeclaration]
      ) [ListNoVarDecls]
    ) [VarDecl]
  ) [VarDeclarations]
  HasMethodDeclList(
    HasMethodDeclList(
      NoMethodDeclList(
      ) [NoMethodDeclList]
      MethodDeclaration(
        MethodWithType(
          Type(
           int
          ) [Type]
         k
        ) [MethodWithType]
        FormParsBracketsExists(
          FormParsWithList(
            FormParList(
              FormParsDecl(
                Type(
                 int
                ) [Type]
               y
                NoVarBrackets(
                ) [NoVarBrackets]
              ) [FormParsDecl]
            ) [FormParList]
          ) [FormParsWithList]
        ) [FormParsBracketsExists]
        HasClassFields(
          NoClassFields(
          ) [NoClassFields]
          VarDecl(
            Type(
             int
            ) [Type]
            ListNoVarDecls(
              LastVarDeclaration(
                VarName(
                 c
                  NoVarBrackets(
                  ) [NoVarBrackets]
                ) [VarName]
              ) [LastVarDeclaration]
            ) [ListNoVarDecls]
          ) [VarDecl]
        ) [HasClassFields]
        StatementListWithStatement(
          StatementListWithStatement(
            EmptyStatementList(
            ) [EmptyStatementList]
            DesignatorStatementState(
              DesignatorStatementAssignOp(
                DesignatorAssign(
                  IdentDesignator(
                   c
                  ) [IdentDesignator]
                  PositiveExpr(
                    NormalTerm(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [NormalTerm]
                  ) [PositiveExpr]
                ) [DesignatorAssign]
              ) [DesignatorStatementAssignOp]
            ) [DesignatorStatementState]
          ) [StatementListWithStatement]
          ReturnStatement(
            AddopExpr(
              PositiveExpr(
                NormalTerm(
                  FactorDesignator(
                    IdentDesignator(
                     c
                    ) [IdentDesignator]
                  ) [FactorDesignator]
                ) [NormalTerm]
              ) [PositiveExpr]
              Plus(
              ) [Plus]
              NormalTerm(
                FactorNumber(
                 2
                ) [FactorNumber]
              ) [NormalTerm]
            ) [AddopExpr]
          ) [ReturnStatement]
        ) [StatementListWithStatement]
      ) [MethodDeclaration]
    ) [HasMethodDeclList]
    MethodDeclaration(
      MethodWithNoType(
       main
      ) [MethodWithNoType]
      FormParsBracketsExists(
        FormParsEmptyList(
        ) [FormParsEmptyList]
      ) [FormParsBracketsExists]
      NoClassFields(
      ) [NoClassFields]
      StatementListWithStatement(
        StatementListWithStatement(
          StatementListWithStatement(
            StatementListWithStatement(
              StatementListWithStatement(
                StatementListWithStatement(
                  StatementListWithStatement(
                    EmptyStatementList(
                    ) [EmptyStatementList]
                    DesignatorStatementState(
                      DesignatorStatementAssignOp(
                        DesignatorAssign(
                          IdentDesignator(
                           y
                          ) [IdentDesignator]
                          PositiveExpr(
                            NormalTerm(
                              FactorNumber(
                               2
                              ) [FactorNumber]
                            ) [NormalTerm]
                          ) [PositiveExpr]
                        ) [DesignatorAssign]
                      ) [DesignatorStatementAssignOp]
                    ) [DesignatorStatementState]
                  ) [StatementListWithStatement]
                  DesignatorStatementState(
                    DesignatorStatementAssignOp(
                      DesignatorAssign(
                        IdentDesignator(
                         x
                        ) [IdentDesignator]
                        AddopExpr(
                          PositiveExpr(
                            NormalTerm(
                              FactorDesignator(
                                IdentDesignator(
                                 y
                                ) [IdentDesignator]
                              ) [FactorDesignator]
                            ) [NormalTerm]
                          ) [PositiveExpr]
                          Plus(
                          ) [Plus]
                          NormalTerm(
                            FactorNumber(
                             2
                            ) [FactorNumber]
                          ) [NormalTerm]
                        ) [AddopExpr]
                      ) [DesignatorAssign]
                    ) [DesignatorStatementAssignOp]
                  ) [DesignatorStatementState]
                ) [StatementListWithStatement]
                DesignatorStatementState(
                  DesignatorStatementAssignOp(
                    DesignatorAssign(
                      IdentDesignator(
                       y
                      ) [IdentDesignator]
                      AddopExpr(
                        PositiveExpr(
                          NormalTerm(
                            FactorDesignatorActPars(
                              IdentDesignator(
                               k
                              ) [IdentDesignator]
                              EmptyActPars(
                              ) [EmptyActPars]
                            ) [FactorDesignatorActPars]
                          ) [NormalTerm]
                        ) [PositiveExpr]
                        Plus(
                        ) [Plus]
                        NormalTerm(
                          FactorNumber(
                           3
                          ) [FactorNumber]
                        ) [NormalTerm]
                      ) [AddopExpr]
                    ) [DesignatorAssign]
                  ) [DesignatorStatementAssignOp]
                ) [DesignatorStatementState]
              ) [StatementListWithStatement]
              BreakStatement(
              ) [BreakStatement]
            ) [StatementListWithStatement]
            WhileStatement(
              WhileStart(
              ) [WhileStart]
              JustCondition(
                JustCondTerm(
                  ConditionWithoutOp(
                    PositiveExpr(
                      NormalTerm(
                        FactorBool(
                         true
                        ) [FactorBool]
                      ) [NormalTerm]
                    ) [PositiveExpr]
                  ) [ConditionWithoutOp]
                ) [JustCondTerm]
              ) [JustCondition]
              BlockStatement(
                EmptyStatementList(
                ) [EmptyStatementList]
              ) [BlockStatement]
            ) [WhileStatement]
          ) [StatementListWithStatement]
          PrintStatement(
            PositiveExpr(
              NormalTerm(
                FactorDesignator(
                  IdentDesignator(
                   y
                  ) [IdentDesignator]
                ) [FactorDesignator]
              ) [NormalTerm]
            ) [PositiveExpr]
          ) [PrintStatement]
        ) [StatementListWithStatement]
        VoidReturnStatement(
        ) [VoidReturnStatement]
      ) [StatementListWithStatement]
    ) [MethodDeclaration]
  ) [HasMethodDeclList]
) [Program]
INFO  23:13:41,980 - ===================================
INFO  23:13:41,983 - method: k defined with 1 and 1
ERROR 23:13:41,983 - Semantic error: cannot use break outside of a loopmain
INFO  23:13:41,983 - method: main defined with 0 and 0
INFO  23:13:41,983 - ===================================
