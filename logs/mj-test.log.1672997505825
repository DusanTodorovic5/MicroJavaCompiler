INFO  10:31:28,871 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:31:28,915 - #2 program
INFO  10:31:28,915 - #45 p
INFO  10:31:28,915 - #6 const
INFO  10:31:28,915 - #45 int
INFO  10:31:28,915 - #45 size
INFO  10:31:28,916 - #30 =
INFO  10:31:28,916 - #44 10
INFO  10:31:28,916 - #33 ;
INFO  10:31:28,917 - #4 class
INFO  10:31:28,918 - #45 Table
INFO  10:31:28,918 - #14 extends
INFO  10:31:28,918 - #30 =
ERROR 10:31:28,918 - 
Syntax Error on line 5
INFO  10:31:28,918 - #41 {
INFO  10:31:28,918 - #45 int
INFO  10:31:28,918 - #45 pos
INFO  10:31:28,919 - #39 [
INFO  10:31:28,919 - #40 ]
INFO  10:31:28,920 - #35 ,
INFO  10:31:28,920 - #45 neg
INFO  10:31:28,920 - #39 [
INFO  10:31:28,920 - #40 ]
INFO  10:31:28,920 - #35 ,
INFO  10:31:28,920 - #45 factor
INFO  10:31:28,921 - #33 ;
INFO  10:31:28,921 - #41 {
INFO  10:31:28,921 - #45 Table
INFO  10:31:28,921 - #37 (
INFO  10:31:28,921 - #45 int
INFO  10:31:28,921 - #45 factor
INFO  10:31:28,921 - #38 )
INFO  10:31:28,921 - #41 {
INFO  10:31:28,921 - #45 this
INFO  10:31:28,921 - #36 .
INFO  10:31:28,921 - #45 factor
INFO  10:31:28,921 - #30 =
INFO  10:31:28,921 - #45 factor
INFO  10:31:28,921 - #33 ;
INFO  10:31:28,922 - #42 }
INFO  10:31:28,922 - #13 void
INFO  10:31:28,922 - #45 putp
INFO  10:31:28,922 - #37 (
INFO  10:31:28,922 - #45 int
INFO  10:31:28,922 - #45 a
INFO  10:31:28,922 - #35 ,
INFO  10:31:28,922 - #45 int
INFO  10:31:28,922 - #45 idx
INFO  10:31:28,922 - #38 )
INFO  10:31:28,922 - #41 {
INFO  10:31:28,922 - #45 this
INFO  10:31:28,922 - #36 .
INFO  10:31:28,922 - #45 pos
INFO  10:31:28,922 - #39 [
INFO  10:31:28,922 - #45 idx
INFO  10:31:28,922 - #40 ]
INFO  10:31:28,923 - #30 =
INFO  10:31:28,923 - #45 a
INFO  10:31:28,923 - #33 ;
INFO  10:31:28,923 - #42 }
INFO  10:31:28,923 - #13 void
INFO  10:31:28,923 - #45 putn
INFO  10:31:28,923 - #37 (
INFO  10:31:28,923 - #45 int
INFO  10:31:28,923 - #45 a
INFO  10:31:28,923 - #35 ,
INFO  10:31:28,924 - #45 int
INFO  10:31:28,924 - #45 idx
INFO  10:31:28,924 - #38 )
INFO  10:31:28,924 - #41 {
INFO  10:31:28,924 - #45 this
INFO  10:31:28,924 - #36 .
INFO  10:31:28,924 - #45 neg
INFO  10:31:28,924 - #39 [
INFO  10:31:28,924 - #45 idx
INFO  10:31:28,924 - #40 ]
INFO  10:31:28,924 - #30 =
INFO  10:31:28,924 - #45 a
INFO  10:31:28,926 - #33 ;
INFO  10:31:28,926 - #42 }
INFO  10:31:28,926 - #45 int
INFO  10:31:28,926 - #45 getp
INFO  10:31:28,926 - #37 (
INFO  10:31:28,926 - #45 int
INFO  10:31:28,926 - #45 idx
INFO  10:31:28,926 - #38 )
INFO  10:31:28,926 - #41 {
INFO  10:31:28,926 - #12 return
INFO  10:31:28,927 - #45 pos
INFO  10:31:28,927 - #39 [
INFO  10:31:28,927 - #45 idx
INFO  10:31:28,927 - #40 ]
INFO  10:31:28,927 - #33 ;
INFO  10:31:28,927 - #42 }
INFO  10:31:28,927 - #45 int
INFO  10:31:28,927 - #45 getn
INFO  10:31:28,927 - #37 (
INFO  10:31:28,927 - #45 int
INFO  10:31:28,927 - #45 idx
INFO  10:31:28,927 - #38 )
INFO  10:31:28,927 - #41 {
INFO  10:31:28,927 - #12 return
INFO  10:31:28,928 - #45 neg
INFO  10:31:28,928 - #39 [
INFO  10:31:28,928 - #45 idx
INFO  10:31:28,928 - #40 ]
INFO  10:31:28,928 - #33 ;
INFO  10:31:28,928 - #42 }
INFO  10:31:28,928 - #42 }
INFO  10:31:28,928 - #42 }
INFO  10:31:28,928 - #45 Table
INFO  10:31:28,928 - #45 val
INFO  10:31:28,928 - #33 ;
INFO  10:31:28,928 - #45 Int
INFO  10:31:28,928 - #45 rows
INFO  10:31:28,928 - #35 ,
INFO  10:31:28,928 - #45 columns
INFO  10:31:28,928 - #33 ;
INFO  10:31:28,929 - #41 {
INFO  10:31:28,929 - #13 void
INFO  10:31:28,929 - #45 f
INFO  10:31:28,929 - #37 (
INFO  10:31:28,929 - #45 char
INFO  10:31:28,929 - #45 ch
INFO  10:31:28,929 - #35 ,
INFO  10:31:28,929 - #45 int
INFO  10:31:28,929 - #45 a
INFO  10:31:28,929 - #35 ,
INFO  10:31:28,929 - #45 int
INFO  10:31:28,929 - #45 arg
INFO  10:31:28,929 - #38 )
INFO  10:31:28,929 - #45 int
INFO  10:31:28,929 - #45 x
INFO  10:31:28,930 - #33 ;
INFO  10:31:28,930 - #41 {
INFO  10:31:28,930 - #45 x
INFO  10:31:28,930 - #30 =
INFO  10:31:28,930 - #45 arg
INFO  10:31:28,930 - #33 ;
INFO  10:31:28,930 - #42 }
INFO  10:31:28,930 - #13 void
INFO  10:31:28,930 - #45 main
INFO  10:31:28,930 - #37 (
INFO  10:31:28,930 - #38 )
INFO  10:31:28,930 - #45 int
INFO  10:31:28,930 - #45 x
INFO  10:31:28,930 - #35 ,
INFO  10:31:28,930 - #45 i
INFO  10:31:28,930 - #33 ;
INFO  10:31:28,930 - #45 char
INFO  10:31:28,930 - #45 c
INFO  10:31:28,930 - #33 ;
INFO  10:31:28,930 - #45 int
INFO  10:31:28,930 - #45 arr
INFO  10:31:28,930 - #39 [
INFO  10:31:28,931 - #40 ]
INFO  10:31:28,931 - #33 ;
INFO  10:31:28,931 - #41 {
INFO  10:31:28,931 - #45 val
INFO  10:31:28,931 - #30 =
INFO  10:31:28,931 - #9 new
INFO  10:31:28,931 - #45 Table
INFO  10:31:28,931 - #37 (
INFO  10:31:28,931 - #44 2
INFO  10:31:28,931 - #38 )
INFO  10:31:28,931 - #33 ;
INFO  10:31:28,931 - #45 arr
INFO  10:31:28,931 - #30 =
INFO  10:31:28,931 - #9 new
INFO  10:31:28,931 - #45 int
INFO  10:31:28,931 - #39 [
INFO  10:31:28,931 - #44 3
INFO  10:31:28,931 - #40 ]
INFO  10:31:28,931 - #33 ;
INFO  10:31:28,931 - #45 i
INFO  10:31:28,931 - #30 =
INFO  10:31:28,931 - #44 0
INFO  10:31:28,933 - #33 ;
INFO  10:31:28,933 - #8 while
INFO  10:31:28,933 - #37 (
INFO  10:31:28,933 - #45 i
INFO  10:31:28,933 - #26 <
INFO  10:31:28,933 - #44 3
INFO  10:31:28,933 - #38 )
INFO  10:31:28,933 - #41 {
INFO  10:31:28,933 - #45 arr
INFO  10:31:28,933 - #39 [
INFO  10:31:28,933 - #45 i
INFO  10:31:28,933 - #40 ]
INFO  10:31:28,933 - #30 =
INFO  10:31:28,933 - #45 i
INFO  10:31:28,933 - #33 ;
INFO  10:31:28,933 - #45 i
INFO  10:31:28,934 - #31 ++
INFO  10:31:28,934 - #33 ;
INFO  10:31:28,934 - #42 }
INFO  10:31:28,934 - #45 arr
INFO  10:31:28,934 - #36 .
INFO  10:31:28,934 - #16 foreach
INFO  10:31:28,934 - #37 (
INFO  10:31:28,934 - #45 x
INFO  10:31:28,935 - #43 =>
INFO  10:31:28,935 - #10 print
INFO  10:31:28,935 - #37 (
INFO  10:31:28,935 - #45 x
INFO  10:31:28,935 - #38 )
INFO  10:31:28,935 - #33 ;
INFO  10:31:28,935 - #38 )
INFO  10:31:28,935 - #33 ;
INFO  10:31:28,936 - #45 val
INFO  10:31:28,936 - #36 .
INFO  10:31:28,936 - #45 pos
INFO  10:31:28,936 - #30 =
INFO  10:31:28,936 - #9 new
INFO  10:31:28,936 - #45 int
INFO  10:31:28,936 - #39 [
INFO  10:31:28,936 - #45 size
INFO  10:31:28,936 - #40 ]
INFO  10:31:28,936 - #33 ;
INFO  10:31:28,937 - #45 val
INFO  10:31:28,937 - #36 .
INFO  10:31:28,937 - #45 neg
INFO  10:31:28,937 - #30 =
INFO  10:31:28,937 - #9 new
INFO  10:31:28,937 - #45 int
INFO  10:31:28,937 - #39 [
INFO  10:31:28,937 - #45 size
INFO  10:31:28,937 - #40 ]
INFO  10:31:28,937 - #33 ;
INFO  10:31:28,937 - #11 read
INFO  10:31:28,937 - #37 (
INFO  10:31:28,938 - #45 x
INFO  10:31:28,938 - #38 )
INFO  10:31:28,938 - #33 ;
INFO  10:31:28,938 - #39 [
INFO  10:31:28,938 - #45 i
INFO  10:31:28,938 - #35 ,
INFO  10:31:28,938 - #35 ,
INFO  10:31:28,938 - #45 x
INFO  10:31:28,938 - #40 ]
INFO  10:31:28,938 - #30 =
INFO  10:31:28,938 - #45 arr
INFO  10:31:28,938 - #33 ;
INFO  10:31:28,938 - #8 while
INFO  10:31:28,938 - #37 (
INFO  10:31:28,938 - #45 i
INFO  10:31:28,938 - #26 <
INFO  10:31:28,938 - #45 size
INFO  10:31:28,938 - #38 )
INFO  10:31:28,938 - #41 {
INFO  10:31:28,938 - #45 val
INFO  10:31:28,938 - #36 .
INFO  10:31:28,938 - #45 putp
INFO  10:31:28,938 - #37 (
INFO  10:31:28,938 - #44 0
INFO  10:31:28,939 - #35 ,
INFO  10:31:28,939 - #45 i
INFO  10:31:28,939 - #38 )
INFO  10:31:28,939 - #33 ;
INFO  10:31:28,939 - #45 val
INFO  10:31:28,939 - #36 .
INFO  10:31:28,939 - #45 putn
INFO  10:31:28,939 - #37 (
INFO  10:31:28,939 - #44 0
INFO  10:31:28,939 - #35 ,
INFO  10:31:28,940 - #45 i
INFO  10:31:28,940 - #38 )
INFO  10:31:28,940 - #33 ;
INFO  10:31:28,940 - #45 i
INFO  10:31:28,940 - #31 ++
INFO  10:31:28,940 - #33 ;
INFO  10:31:28,940 - #42 }
INFO  10:31:28,940 - #45 f
INFO  10:31:28,940 - #37 (
INFO  10:31:28,940 - #45 c
INFO  10:31:28,940 - #35 ,
INFO  10:31:28,940 - #45 x
INFO  10:31:28,940 - #35 ,
INFO  10:31:28,940 - #45 i
INFO  10:31:28,940 - #38 )
INFO  10:31:28,940 - #33 ;
INFO  10:31:28,941 - #11 read
INFO  10:31:28,941 - #37 (
INFO  10:31:28,941 - #45 rows
INFO  10:31:28,941 - #38 )
INFO  10:31:28,941 - #33 ;
INFO  10:31:28,941 - #45 x
INFO  10:31:28,941 - #30 =
INFO  10:31:28,941 - #45 rows
INFO  10:31:28,941 - #33 ;
INFO  10:31:28,941 - #8 while
INFO  10:31:28,941 - #37 (
INFO  10:31:28,941 - #46 true
INFO  10:31:28,941 - #38 )
INFO  10:31:28,941 - #41 {
INFO  10:31:28,942 - #7 if
INFO  10:31:28,942 - #37 (
INFO  10:31:28,942 - #45 x
INFO  10:31:28,942 - #27 <=
INFO  10:31:28,942 - #44 0
INFO  10:31:28,942 - #38 )
INFO  10:31:28,942 - #3 break
INFO  10:31:28,942 - #33 ;
INFO  10:31:28,942 - #7 if
INFO  10:31:28,942 - #37 (
INFO  10:31:28,942 - #44 0
INFO  10:31:28,942 - #27 <=
INFO  10:31:28,942 - #45 x
INFO  10:31:28,942 - #28 &&
INFO  10:31:28,942 - #45 x
INFO  10:31:28,943 - #26 <
INFO  10:31:28,943 - #45 size
INFO  10:31:28,943 - #38 )
INFO  10:31:28,943 - #41 {
INFO  10:31:28,943 - #45 val
INFO  10:31:28,943 - #36 .
INFO  10:31:28,943 - #45 putp
INFO  10:31:28,943 - #37 (
INFO  10:31:28,943 - #45 val
INFO  10:31:28,943 - #36 .
INFO  10:31:28,943 - #45 getp
INFO  10:31:28,943 - #37 (
INFO  10:31:28,943 - #45 x
INFO  10:31:28,943 - #38 )
INFO  10:31:28,943 - #17 +
INFO  10:31:28,943 - #44 1
INFO  10:31:28,943 - #38 )
INFO  10:31:28,943 - #33 ;
INFO  10:31:28,943 - #42 }
INFO  10:31:28,944 - #5 else
INFO  10:31:28,944 - #7 if
INFO  10:31:28,944 - #37 (
INFO  10:31:28,944 - #18 -
INFO  10:31:28,944 - #45 size
INFO  10:31:28,944 - #26 <
INFO  10:31:28,944 - #45 x
INFO  10:31:28,944 - #28 &&
INFO  10:31:28,944 - #45 x
INFO  10:31:28,944 - #26 <
INFO  10:31:28,944 - #44 0
INFO  10:31:28,944 - #38 )
INFO  10:31:28,944 - #41 {
INFO  10:31:28,945 - #45 val
INFO  10:31:28,945 - #36 .
INFO  10:31:28,945 - #45 putn
INFO  10:31:28,945 - #37 (
INFO  10:31:28,945 - #45 val
INFO  10:31:28,945 - #36 .
INFO  10:31:28,945 - #45 getn
INFO  10:31:28,945 - #37 (
INFO  10:31:28,945 - #18 -
INFO  10:31:28,945 - #45 x
INFO  10:31:28,945 - #38 )
INFO  10:31:28,945 - #17 +
INFO  10:31:28,945 - #44 1
INFO  10:31:28,945 - #38 )
INFO  10:31:28,945 - #33 ;
INFO  10:31:28,945 - #42 }
INFO  10:31:28,945 - #11 read
INFO  10:31:28,945 - #37 (
INFO  10:31:28,945 - #45 x
INFO  10:31:28,945 - #38 )
INFO  10:31:28,945 - #33 ;
INFO  10:31:28,945 - #42 }
INFO  10:31:28,945 - #42 }
INFO  10:31:28,945 - #42 }
ERROR 10:31:28,946 - Fatal error, parsing will not continue on line 60
