INFO  10:29:27,839 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:29:27,871 - #2 program
INFO  10:29:27,871 - #45 p
INFO  10:29:27,871 - #6 const
INFO  10:29:27,871 - #45 int
INFO  10:29:27,871 - #45 size
INFO  10:29:27,872 - #30 =
INFO  10:29:27,872 - #44 10
INFO  10:29:27,872 - #33 ;
INFO  10:29:27,872 - #4 class
INFO  10:29:27,873 - #45 Table
INFO  10:29:27,873 - #41 {
INFO  10:29:27,873 - #45 int
INFO  10:29:27,873 - #45 pos
INFO  10:29:27,873 - #39 [
INFO  10:29:27,873 - #40 ]
INFO  10:29:27,875 - #35 ,
INFO  10:29:27,878 - #45 neg
INFO  10:29:27,878 - #39 [
INFO  10:29:27,878 - #40 ]
INFO  10:29:27,878 - #35 ,
INFO  10:29:27,878 - #45 factor
INFO  10:29:27,878 - #33 ;
INFO  10:29:27,879 - #41 {
INFO  10:29:27,879 - #45 Table
INFO  10:29:27,879 - #37 (
INFO  10:29:27,879 - #45 int
INFO  10:29:27,879 - #45 factor
INFO  10:29:27,880 - #38 )
INFO  10:29:27,880 - #41 {
INFO  10:29:27,880 - #45 this
INFO  10:29:27,881 - #36 .
INFO  10:29:27,881 - #45 factor
INFO  10:29:27,881 - #30 =
INFO  10:29:27,882 - #45 factor
INFO  10:29:27,882 - #33 ;
INFO  10:29:27,882 - #42 }
INFO  10:29:27,882 - #13 void
INFO  10:29:27,884 - #45 putp
INFO  10:29:27,884 - #37 (
INFO  10:29:27,884 - #45 int
INFO  10:29:27,885 - #45 a
INFO  10:29:27,885 - #35 ,
INFO  10:29:27,885 - #45 int
INFO  10:29:27,885 - #45 idx
INFO  10:29:27,885 - #38 )
INFO  10:29:27,885 - #41 {
INFO  10:29:27,886 - #45 this
INFO  10:29:27,886 - #36 .
INFO  10:29:27,886 - #45 pos
INFO  10:29:27,886 - #39 [
INFO  10:29:27,886 - #45 idx
INFO  10:29:27,886 - #40 ]
INFO  10:29:27,886 - #30 =
INFO  10:29:27,886 - #45 a
INFO  10:29:27,887 - #33 ;
INFO  10:29:27,887 - #42 }
INFO  10:29:27,887 - #13 void
INFO  10:29:27,887 - #45 putn
INFO  10:29:27,887 - #37 (
INFO  10:29:27,887 - #45 int
INFO  10:29:27,887 - #45 a
INFO  10:29:27,887 - #35 ,
INFO  10:29:27,887 - #45 int
INFO  10:29:27,888 - #45 idx
INFO  10:29:27,888 - #38 )
INFO  10:29:27,888 - #41 {
INFO  10:29:27,888 - #45 this
INFO  10:29:27,888 - #36 .
INFO  10:29:27,888 - #45 neg
INFO  10:29:27,888 - #39 [
INFO  10:29:27,888 - #45 idx
INFO  10:29:27,888 - #40 ]
INFO  10:29:27,888 - #30 =
INFO  10:29:27,888 - #45 a
INFO  10:29:27,888 - #33 ;
INFO  10:29:27,889 - #42 }
INFO  10:29:27,889 - #45 int
INFO  10:29:27,889 - #45 getp
INFO  10:29:27,891 - #37 (
INFO  10:29:27,891 - #45 int
INFO  10:29:27,891 - #45 idx
INFO  10:29:27,891 - #38 )
INFO  10:29:27,891 - #41 {
INFO  10:29:27,891 - #12 return
INFO  10:29:27,891 - #45 pos
INFO  10:29:27,891 - #39 [
INFO  10:29:27,891 - #45 idx
INFO  10:29:27,891 - #40 ]
INFO  10:29:27,891 - #33 ;
INFO  10:29:27,891 - #42 }
INFO  10:29:27,891 - #45 int
INFO  10:29:27,891 - #45 getn
INFO  10:29:27,891 - #37 (
INFO  10:29:27,891 - #45 int
INFO  10:29:27,891 - #45 idx
INFO  10:29:27,891 - #38 )
INFO  10:29:27,891 - #41 {
INFO  10:29:27,891 - #12 return
INFO  10:29:27,891 - #45 neg
INFO  10:29:27,891 - #39 [
INFO  10:29:27,891 - #45 idx
INFO  10:29:27,891 - #40 ]
INFO  10:29:27,891 - #33 ;
INFO  10:29:27,893 - #42 }
INFO  10:29:27,894 - #42 }
INFO  10:29:27,894 - #42 }
INFO  10:29:27,894 - #45 Table
INFO  10:29:27,898 - #45 val
INFO  10:29:27,898 - #33 ;
INFO  10:29:27,898 - #45 Int
INFO  10:29:27,898 - #45 rows
INFO  10:29:27,898 - #35 ,
INFO  10:29:27,898 - #45 columns
INFO  10:29:27,898 - #33 ;
INFO  10:29:27,898 - #41 {
INFO  10:29:27,898 - #13 void
INFO  10:29:27,899 - #45 f
INFO  10:29:27,899 - #37 (
INFO  10:29:27,899 - #45 char
INFO  10:29:27,899 - #45 ch
INFO  10:29:27,900 - #35 ,
INFO  10:29:27,900 - #45 int
INFO  10:29:27,900 - #45 a
INFO  10:29:27,900 - #35 ,
INFO  10:29:27,900 - #45 int
INFO  10:29:27,900 - #45 arg
INFO  10:29:27,900 - #38 )
INFO  10:29:27,900 - #45 int
INFO  10:29:27,900 - #45 x
INFO  10:29:27,900 - #33 ;
INFO  10:29:27,900 - #41 {
INFO  10:29:27,900 - #45 x
INFO  10:29:27,900 - #30 =
INFO  10:29:27,901 - #45 arg
INFO  10:29:27,901 - #33 ;
INFO  10:29:27,901 - #42 }
INFO  10:29:27,901 - #13 void
INFO  10:29:27,901 - #45 main
INFO  10:29:27,901 - #37 (
INFO  10:29:27,901 - #38 )
INFO  10:29:27,902 - #45 int
INFO  10:29:27,902 - #45 x
INFO  10:29:27,902 - #35 ,
INFO  10:29:27,902 - #45 i
INFO  10:29:27,902 - #33 ;
INFO  10:29:27,902 - #45 char
INFO  10:29:27,902 - #45 c
INFO  10:29:27,902 - #35 ,
INFO  10:29:27,902 - #45 int
INFO  10:29:27,902 - #45 arr
ERROR 10:29:27,902 - 
Syntax Error on line 27
INFO  10:29:27,903 - #39 [
INFO  10:29:27,903 - #40 ]
INFO  10:29:27,903 - #33 ;
INFO  10:29:27,903 - #41 {
INFO  10:29:27,903 - #45 val
INFO  10:29:27,903 - #30 =
INFO  10:29:27,903 - #9 new
INFO  10:29:27,903 - #45 Table
INFO  10:29:27,903 - #37 (
INFO  10:29:27,903 - #44 2
INFO  10:29:27,903 - #38 )
INFO  10:29:27,905 - #33 ;
INFO  10:29:27,905 - #45 arr
INFO  10:29:27,905 - #30 =
INFO  10:29:27,905 - #9 new
INFO  10:29:27,905 - #45 int
INFO  10:29:27,905 - #39 [
INFO  10:29:27,905 - #44 3
INFO  10:29:27,905 - #40 ]
INFO  10:29:27,905 - #33 ;
INFO  10:29:27,905 - #45 i
INFO  10:29:27,905 - #30 =
INFO  10:29:27,905 - #44 0
INFO  10:29:27,905 - #33 ;
INFO  10:29:27,905 - #8 while
INFO  10:29:27,905 - #37 (
INFO  10:29:27,905 - #45 i
INFO  10:29:27,905 - #26 <
INFO  10:29:27,905 - #44 3
INFO  10:29:27,906 - #38 )
INFO  10:29:27,906 - #41 {
INFO  10:29:27,906 - #45 arr
INFO  10:29:27,906 - #39 [
INFO  10:29:27,906 - #45 i
INFO  10:29:27,906 - #40 ]
INFO  10:29:27,906 - #30 =
INFO  10:29:27,906 - #45 i
INFO  10:29:27,906 - #33 ;
INFO  10:29:27,906 - #45 i
INFO  10:29:27,906 - #31 ++
INFO  10:29:27,906 - #33 ;
INFO  10:29:27,907 - #42 }
INFO  10:29:27,907 - #45 arr
INFO  10:29:27,907 - #36 .
INFO  10:29:27,907 - #16 foreach
INFO  10:29:27,907 - #37 (
INFO  10:29:27,907 - #45 x
INFO  10:29:27,907 - #43 =>
INFO  10:29:27,907 - #10 print
INFO  10:29:27,907 - #37 (
INFO  10:29:27,907 - #45 x
INFO  10:29:27,907 - #38 )
INFO  10:29:27,907 - #33 ;
INFO  10:29:27,908 - #38 )
INFO  10:29:27,908 - #33 ;
INFO  10:29:27,908 - #45 val
INFO  10:29:27,908 - #36 .
INFO  10:29:27,908 - #45 pos
INFO  10:29:27,908 - #30 =
INFO  10:29:27,908 - #9 new
INFO  10:29:27,908 - #45 int
INFO  10:29:27,908 - #39 [
INFO  10:29:27,908 - #45 size
INFO  10:29:27,908 - #40 ]
INFO  10:29:27,908 - #33 ;
INFO  10:29:27,908 - #45 val
INFO  10:29:27,908 - #36 .
INFO  10:29:27,908 - #45 neg
INFO  10:29:27,908 - #30 =
INFO  10:29:27,908 - #9 new
INFO  10:29:27,908 - #45 int
INFO  10:29:27,908 - #39 [
INFO  10:29:27,909 - #45 size
INFO  10:29:27,909 - #40 ]
INFO  10:29:27,909 - #33 ;
INFO  10:29:27,909 - #11 read
INFO  10:29:27,909 - #37 (
INFO  10:29:27,909 - #45 x
INFO  10:29:27,909 - #38 )
INFO  10:29:27,909 - #33 ;
INFO  10:29:27,909 - #39 [
INFO  10:29:27,909 - #45 i
INFO  10:29:27,909 - #35 ,
INFO  10:29:27,909 - #35 ,
INFO  10:29:27,909 - #45 x
INFO  10:29:27,909 - #40 ]
ERROR 10:29:27,909 - Recovery done on , line 31
ERROR 10:29:27,910 - 
Syntax Error on line 39
INFO  10:29:27,910 - #30 =
INFO  10:29:27,910 - #45 arr
INFO  10:29:27,910 - #33 ;
INFO  10:29:27,910 - #8 while
INFO  10:29:27,910 - #37 (
INFO  10:29:27,910 - #45 i
INFO  10:29:27,910 - #26 <
INFO  10:29:27,910 - #45 size
INFO  10:29:27,910 - #38 )
INFO  10:29:27,910 - #41 {
INFO  10:29:27,910 - #45 val
INFO  10:29:27,910 - #36 .
INFO  10:29:27,910 - #45 putp
INFO  10:29:27,910 - #37 (
INFO  10:29:27,910 - #44 0
INFO  10:29:27,911 - #35 ,
INFO  10:29:27,911 - #45 i
INFO  10:29:27,911 - #38 )
INFO  10:29:27,911 - #33 ;
INFO  10:29:27,911 - #45 val
INFO  10:29:27,912 - #36 .
INFO  10:29:27,912 - #45 putn
INFO  10:29:27,912 - #37 (
INFO  10:29:27,912 - #44 0
INFO  10:29:27,912 - #35 ,
INFO  10:29:27,912 - #45 i
INFO  10:29:27,912 - #38 )
INFO  10:29:27,912 - #33 ;
INFO  10:29:27,912 - #45 i
INFO  10:29:27,912 - #31 ++
INFO  10:29:27,912 - #33 ;
INFO  10:29:27,912 - #42 }
INFO  10:29:27,912 - #45 f
INFO  10:29:27,912 - #37 (
INFO  10:29:27,912 - #45 c
INFO  10:29:27,912 - #35 ,
INFO  10:29:27,912 - #45 x
INFO  10:29:27,913 - #35 ,
INFO  10:29:27,913 - #45 i
INFO  10:29:27,913 - #38 )
INFO  10:29:27,913 - #33 ;
INFO  10:29:27,913 - #11 read
INFO  10:29:27,913 - #37 (
INFO  10:29:27,913 - #45 rows
INFO  10:29:27,913 - #38 )
INFO  10:29:27,913 - #33 ;
INFO  10:29:27,913 - #45 x
INFO  10:29:27,913 - #30 =
INFO  10:29:27,913 - #45 rows
INFO  10:29:27,913 - #33 ;
INFO  10:29:27,914 - #8 while
INFO  10:29:27,914 - #37 (
INFO  10:29:27,914 - #46 true
INFO  10:29:27,914 - #38 )
INFO  10:29:27,914 - #41 {
INFO  10:29:27,914 - #7 if
INFO  10:29:27,914 - #37 (
INFO  10:29:27,914 - #45 x
INFO  10:29:27,914 - #27 <=
INFO  10:29:27,914 - #44 0
INFO  10:29:27,914 - #38 )
INFO  10:29:27,914 - #3 break
INFO  10:29:27,914 - #33 ;
INFO  10:29:27,915 - #7 if
INFO  10:29:27,915 - #37 (
INFO  10:29:27,915 - #44 0
INFO  10:29:27,915 - #27 <=
INFO  10:29:27,915 - #45 x
INFO  10:29:27,915 - #28 &&
INFO  10:29:27,915 - #45 x
INFO  10:29:27,915 - #26 <
INFO  10:29:27,915 - #45 size
INFO  10:29:27,915 - #38 )
INFO  10:29:27,915 - #41 {
INFO  10:29:27,915 - #45 val
INFO  10:29:27,915 - #36 .
INFO  10:29:27,915 - #45 putp
INFO  10:29:27,915 - #37 (
INFO  10:29:27,915 - #45 val
INFO  10:29:27,915 - #36 .
INFO  10:29:27,915 - #45 getp
INFO  10:29:27,915 - #37 (
INFO  10:29:27,915 - #45 x
INFO  10:29:27,915 - #38 )
INFO  10:29:27,915 - #17 +
INFO  10:29:27,915 - #44 1
INFO  10:29:27,915 - #38 )
INFO  10:29:27,916 - #33 ;
INFO  10:29:27,916 - #42 }
INFO  10:29:27,916 - #5 else
INFO  10:29:27,916 - #7 if
INFO  10:29:27,916 - #37 (
INFO  10:29:27,916 - #18 -
INFO  10:29:27,916 - #45 size
INFO  10:29:27,916 - #26 <
INFO  10:29:27,916 - #45 x
INFO  10:29:27,916 - #28 &&
INFO  10:29:27,916 - #45 x
INFO  10:29:27,916 - #26 <
INFO  10:29:27,916 - #44 0
INFO  10:29:27,916 - #38 )
INFO  10:29:27,916 - #41 {
INFO  10:29:27,916 - #45 val
INFO  10:29:27,916 - #36 .
INFO  10:29:27,916 - #45 putn
INFO  10:29:27,916 - #37 (
INFO  10:29:27,916 - #45 val
INFO  10:29:27,918 - #36 .
INFO  10:29:27,918 - #45 getn
INFO  10:29:27,918 - #37 (
INFO  10:29:27,918 - #18 -
INFO  10:29:27,918 - #45 x
INFO  10:29:27,918 - #38 )
INFO  10:29:27,918 - #17 +
INFO  10:29:27,918 - #44 1
INFO  10:29:27,918 - #38 )
INFO  10:29:27,918 - #33 ;
INFO  10:29:27,918 - #42 }
INFO  10:29:27,918 - #11 read
INFO  10:29:27,918 - #37 (
INFO  10:29:27,919 - #45 x
INFO  10:29:27,919 - #38 )
INFO  10:29:27,919 - #33 ;
INFO  10:29:27,919 - #42 }
INFO  10:29:27,919 - #42 }
INFO  10:29:27,919 - #42 }
ERROR 10:29:27,919 - Fatal error, parsing will not continue on line 58
