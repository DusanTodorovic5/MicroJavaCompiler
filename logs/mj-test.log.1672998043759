INFO  10:40:21,882 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:40:21,917 - #2 program
INFO  10:40:21,917 - #45 p
INFO  10:40:21,917 - #6 const
INFO  10:40:21,917 - #45 int
INFO  10:40:21,917 - #45 size
INFO  10:40:21,918 - #30 =
INFO  10:40:21,918 - #44 10
INFO  10:40:21,918 - #33 ;
INFO  10:40:21,918 - #4 class
INFO  10:40:21,919 - #45 Table
INFO  10:40:21,919 - #41 {
INFO  10:40:21,920 - #45 int
INFO  10:40:21,920 - #45 pos
INFO  10:40:21,920 - #39 [
INFO  10:40:21,920 - #40 ]
INFO  10:40:21,921 - #35 ,
INFO  10:40:21,922 - #45 neg
INFO  10:40:21,922 - #39 [
INFO  10:40:21,922 - #40 ]
INFO  10:40:21,922 - #35 ,
INFO  10:40:21,922 - #45 factor
INFO  10:40:21,923 - #33 ;
INFO  10:40:21,931 - #41 {
INFO  10:40:21,932 - #45 Table
INFO  10:40:21,932 - #37 (
INFO  10:40:21,932 - #45 int
INFO  10:40:21,932 - #45 factor
INFO  10:40:21,932 - #38 )
INFO  10:40:21,932 - #41 {
INFO  10:40:21,932 - #45 this
INFO  10:40:21,933 - #36 .
INFO  10:40:21,933 - #45 factor
INFO  10:40:21,933 - #30 =
INFO  10:40:21,934 - #45 factor
INFO  10:40:21,934 - #33 ;
INFO  10:40:21,934 - #42 }
INFO  10:40:21,934 - #13 void
INFO  10:40:21,935 - #45 putp
INFO  10:40:21,936 - #37 (
INFO  10:40:21,936 - #45 int
INFO  10:40:21,936 - #45 a
INFO  10:40:21,936 - #35 ,
INFO  10:40:21,936 - #45 int
INFO  10:40:21,936 - #45 idx
INFO  10:40:21,936 - #38 )
INFO  10:40:21,936 - #41 {
INFO  10:40:21,937 - #45 this
INFO  10:40:21,937 - #36 .
INFO  10:40:21,937 - #45 pos
INFO  10:40:21,937 - #39 [
INFO  10:40:21,937 - #45 idx
INFO  10:40:21,937 - #40 ]
INFO  10:40:21,937 - #30 =
INFO  10:40:21,937 - #45 a
INFO  10:40:21,937 - #33 ;
INFO  10:40:21,937 - #42 }
INFO  10:40:21,937 - #13 void
INFO  10:40:21,938 - #45 putn
INFO  10:40:21,938 - #37 (
INFO  10:40:21,938 - #45 int
INFO  10:40:21,938 - #45 a
INFO  10:40:21,938 - #35 ,
INFO  10:40:21,938 - #45 int
INFO  10:40:21,938 - #45 idx
INFO  10:40:21,938 - #38 )
INFO  10:40:21,938 - #41 {
INFO  10:40:21,938 - #45 this
INFO  10:40:21,938 - #36 .
INFO  10:40:21,938 - #45 neg
INFO  10:40:21,938 - #39 [
INFO  10:40:21,938 - #45 idx
INFO  10:40:21,939 - #40 ]
INFO  10:40:21,939 - #30 =
INFO  10:40:21,939 - #45 a
INFO  10:40:21,939 - #33 ;
INFO  10:40:21,939 - #42 }
INFO  10:40:21,939 - #45 int
INFO  10:40:21,939 - #45 getp
INFO  10:40:21,939 - #37 (
INFO  10:40:21,939 - #45 int
INFO  10:40:21,939 - #45 idx
INFO  10:40:21,939 - #38 )
INFO  10:40:21,939 - #41 {
INFO  10:40:21,939 - #12 return
INFO  10:40:21,939 - #45 pos
INFO  10:40:21,939 - #39 [
INFO  10:40:21,940 - #45 idx
INFO  10:40:21,940 - #40 ]
INFO  10:40:21,940 - #33 ;
INFO  10:40:21,940 - #42 }
INFO  10:40:21,940 - #45 int
INFO  10:40:21,940 - #45 getn
INFO  10:40:21,940 - #37 (
INFO  10:40:21,940 - #45 int
INFO  10:40:21,940 - #45 idx
INFO  10:40:21,940 - #38 )
INFO  10:40:21,940 - #41 {
INFO  10:40:21,941 - #12 return
INFO  10:40:21,941 - #45 neg
INFO  10:40:21,941 - #39 [
INFO  10:40:21,941 - #45 idx
INFO  10:40:21,941 - #40 ]
INFO  10:40:21,941 - #33 ;
INFO  10:40:21,941 - #42 }
INFO  10:40:21,941 - #42 }
INFO  10:40:21,942 - #42 }
INFO  10:40:21,942 - #45 Table
INFO  10:40:21,945 - #45 val
INFO  10:40:21,945 - #33 ;
INFO  10:40:21,945 - #45 Int
INFO  10:40:21,945 - #45 rows
INFO  10:40:21,945 - #35 ,
INFO  10:40:21,945 - #45 columns
INFO  10:40:21,947 - #33 ;
INFO  10:40:21,947 - #41 {
INFO  10:40:21,947 - #13 void
INFO  10:40:21,948 - #45 f
INFO  10:40:21,948 - #37 (
INFO  10:40:21,948 - #45 char
INFO  10:40:21,948 - #45 ch
INFO  10:40:21,948 - #35 ,
INFO  10:40:21,948 - #45 int
INFO  10:40:21,948 - #45 a
INFO  10:40:21,948 - #35 ,
INFO  10:40:21,948 - #45 int
INFO  10:40:21,948 - #45 arg
INFO  10:40:21,948 - #35 ,
INFO  10:40:21,948 - #38 )
ERROR 10:40:21,948 - 
Syntax Error on line 26
INFO  10:40:21,948 - #45 int
INFO  10:40:21,948 - #45 x
INFO  10:40:21,948 - #33 ;
INFO  10:40:21,950 - #41 {
INFO  10:40:21,950 - #45 x
INFO  10:40:21,950 - #30 =
INFO  10:40:21,950 - #45 arg
INFO  10:40:21,950 - #33 ;
INFO  10:40:21,950 - #42 }
INFO  10:40:21,950 - #13 void
INFO  10:40:21,950 - #45 main
INFO  10:40:21,950 - #37 (
INFO  10:40:21,950 - #38 )
INFO  10:40:21,950 - #45 int
INFO  10:40:21,951 - #45 x
INFO  10:40:21,951 - #35 ,
INFO  10:40:21,951 - #45 i
INFO  10:40:21,951 - #33 ;
INFO  10:40:21,951 - #45 char
INFO  10:40:21,951 - #45 c
INFO  10:40:21,951 - #33 ;
INFO  10:40:21,951 - #45 int
INFO  10:40:21,951 - #45 arr
INFO  10:40:21,951 - #39 [
INFO  10:40:21,951 - #40 ]
INFO  10:40:21,951 - #33 ;
INFO  10:40:21,951 - #41 {
INFO  10:40:21,951 - #45 val
INFO  10:40:21,951 - #30 =
INFO  10:40:21,951 - #9 new
INFO  10:40:21,951 - #45 Table
INFO  10:40:21,951 - #37 (
INFO  10:40:21,951 - #44 2
INFO  10:40:21,953 - #38 )
INFO  10:40:21,953 - #33 ;
INFO  10:40:21,953 - #45 arr
INFO  10:40:21,954 - #30 =
INFO  10:40:21,954 - #9 new
INFO  10:40:21,954 - #45 int
INFO  10:40:21,954 - #39 [
INFO  10:40:21,954 - #44 3
INFO  10:40:21,954 - #40 ]
INFO  10:40:21,954 - #33 ;
INFO  10:40:21,954 - #45 i
INFO  10:40:21,954 - #30 =
INFO  10:40:21,954 - #44 0
INFO  10:40:21,954 - #33 ;
INFO  10:40:21,955 - #8 while
INFO  10:40:21,955 - #37 (
INFO  10:40:21,955 - #45 i
INFO  10:40:21,955 - #26 <
INFO  10:40:21,955 - #44 3
INFO  10:40:21,955 - #38 )
INFO  10:40:21,955 - #41 {
INFO  10:40:21,955 - #45 arr
INFO  10:40:21,955 - #39 [
INFO  10:40:21,955 - #45 i
INFO  10:40:21,955 - #40 ]
INFO  10:40:21,955 - #30 =
INFO  10:40:21,957 - #45 i
INFO  10:40:21,957 - #33 ;
INFO  10:40:21,957 - #45 i
INFO  10:40:21,957 - #31 ++
INFO  10:40:21,957 - #33 ;
INFO  10:40:21,957 - #42 }
INFO  10:40:21,957 - #45 arr
INFO  10:40:21,957 - #36 .
INFO  10:40:21,957 - #16 foreach
INFO  10:40:21,957 - #37 (
INFO  10:40:21,957 - #45 x
INFO  10:40:21,957 - #43 =>
INFO  10:40:21,958 - #10 print
INFO  10:40:21,958 - #37 (
INFO  10:40:21,958 - #45 x
INFO  10:40:21,958 - #38 )
INFO  10:40:21,958 - #33 ;
INFO  10:40:21,958 - #38 )
INFO  10:40:21,958 - #33 ;
INFO  10:40:21,958 - #45 val
INFO  10:40:21,958 - #36 .
INFO  10:40:21,958 - #45 pos
INFO  10:40:21,958 - #30 =
INFO  10:40:21,958 - #9 new
INFO  10:40:21,958 - #45 int
INFO  10:40:21,958 - #39 [
INFO  10:40:21,958 - #45 size
INFO  10:40:21,958 - #40 ]
INFO  10:40:21,958 - #33 ;
INFO  10:40:21,958 - #45 val
INFO  10:40:21,958 - #36 .
INFO  10:40:21,959 - #45 neg
INFO  10:40:21,959 - #30 =
INFO  10:40:21,959 - #9 new
INFO  10:40:21,959 - #45 int
INFO  10:40:21,959 - #39 [
INFO  10:40:21,959 - #45 size
INFO  10:40:21,959 - #40 ]
INFO  10:40:21,959 - #33 ;
INFO  10:40:21,959 - #11 read
INFO  10:40:21,959 - #37 (
INFO  10:40:21,959 - #45 x
INFO  10:40:21,959 - #38 )
INFO  10:40:21,960 - #33 ;
INFO  10:40:21,960 - #39 [
INFO  10:40:21,960 - #45 i
INFO  10:40:21,960 - #35 ,
INFO  10:40:21,960 - #45 x
INFO  10:40:21,960 - #40 ]
INFO  10:40:21,960 - #30 =
INFO  10:40:21,960 - #45 arr
INFO  10:40:21,960 - #33 ;
INFO  10:40:21,960 - #8 while
INFO  10:40:21,960 - #37 (
INFO  10:40:21,960 - #45 i
INFO  10:40:21,960 - #26 <
INFO  10:40:21,960 - #45 size
INFO  10:40:21,960 - #38 )
INFO  10:40:21,960 - #41 {
INFO  10:40:21,960 - #45 val
INFO  10:40:21,960 - #36 .
INFO  10:40:21,960 - #45 putp
INFO  10:40:21,961 - #37 (
INFO  10:40:21,961 - #44 0
INFO  10:40:21,961 - #35 ,
INFO  10:40:21,961 - #45 i
INFO  10:40:21,961 - #38 )
INFO  10:40:21,961 - #33 ;
INFO  10:40:21,961 - #45 val
INFO  10:40:21,961 - #36 .
INFO  10:40:21,961 - #45 putn
INFO  10:40:21,961 - #37 (
INFO  10:40:21,961 - #44 0
INFO  10:40:21,961 - #35 ,
INFO  10:40:21,961 - #45 i
INFO  10:40:21,961 - #38 )
INFO  10:40:21,961 - #33 ;
INFO  10:40:21,961 - #45 i
INFO  10:40:21,961 - #31 ++
INFO  10:40:21,962 - #33 ;
INFO  10:40:21,962 - #42 }
INFO  10:40:21,962 - #45 f
INFO  10:40:21,962 - #37 (
INFO  10:40:21,962 - #45 c
INFO  10:40:21,962 - #35 ,
INFO  10:40:21,962 - #45 x
INFO  10:40:21,962 - #35 ,
INFO  10:40:21,962 - #45 i
INFO  10:40:21,962 - #38 )
INFO  10:40:21,962 - #33 ;
INFO  10:40:21,962 - #11 read
INFO  10:40:21,962 - #37 (
INFO  10:40:21,962 - #45 rows
INFO  10:40:21,962 - #38 )
INFO  10:40:21,962 - #33 ;
INFO  10:40:21,962 - #45 x
INFO  10:40:21,962 - #30 =
INFO  10:40:21,962 - #45 rows
INFO  10:40:21,962 - #33 ;
INFO  10:40:21,963 - #8 while
INFO  10:40:21,963 - #37 (
INFO  10:40:21,963 - #46 true
INFO  10:40:21,963 - #38 )
INFO  10:40:21,963 - #41 {
INFO  10:40:21,963 - #7 if
INFO  10:40:21,963 - #37 (
INFO  10:40:21,963 - #45 x
INFO  10:40:21,963 - #27 <=
INFO  10:40:21,963 - #44 0
INFO  10:40:21,963 - #38 )
INFO  10:40:21,963 - #3 break
INFO  10:40:21,963 - #33 ;
INFO  10:40:21,964 - #7 if
INFO  10:40:21,964 - #37 (
INFO  10:40:21,964 - #44 0
INFO  10:40:21,964 - #27 <=
INFO  10:40:21,964 - #45 x
INFO  10:40:21,964 - #28 &&
INFO  10:40:21,965 - #45 x
INFO  10:40:21,965 - #26 <
INFO  10:40:21,965 - #45 size
INFO  10:40:21,965 - #38 )
INFO  10:40:21,965 - #41 {
INFO  10:40:21,965 - #45 val
INFO  10:40:21,965 - #36 .
INFO  10:40:21,965 - #45 putp
INFO  10:40:21,965 - #37 (
INFO  10:40:21,965 - #45 val
INFO  10:40:21,965 - #36 .
INFO  10:40:21,965 - #45 getp
INFO  10:40:21,965 - #37 (
INFO  10:40:21,966 - #45 x
INFO  10:40:21,966 - #38 )
INFO  10:40:21,966 - #17 +
INFO  10:40:21,966 - #44 1
INFO  10:40:21,966 - #38 )
INFO  10:40:21,966 - #33 ;
INFO  10:40:21,966 - #42 }
INFO  10:40:21,966 - #5 else
INFO  10:40:21,966 - #7 if
INFO  10:40:21,966 - #37 (
INFO  10:40:21,966 - #18 -
INFO  10:40:21,966 - #45 size
INFO  10:40:21,966 - #26 <
INFO  10:40:21,966 - #45 x
INFO  10:40:21,966 - #28 &&
INFO  10:40:21,966 - #45 x
INFO  10:40:21,966 - #26 <
INFO  10:40:21,966 - #44 0
INFO  10:40:21,966 - #38 )
INFO  10:40:21,966 - #41 {
INFO  10:40:21,966 - #45 val
INFO  10:40:21,966 - #36 .
INFO  10:40:21,966 - #45 putn
INFO  10:40:21,967 - #37 (
INFO  10:40:21,967 - #45 val
INFO  10:40:21,967 - #36 .
INFO  10:40:21,967 - #45 getn
INFO  10:40:21,967 - #37 (
INFO  10:40:21,967 - #18 -
INFO  10:40:21,967 - #45 x
INFO  10:40:21,967 - #38 )
INFO  10:40:21,967 - #17 +
INFO  10:40:21,967 - #44 1
INFO  10:40:21,967 - #38 )
INFO  10:40:21,967 - #33 ;
INFO  10:40:21,967 - #42 }
INFO  10:40:21,967 - #11 read
INFO  10:40:21,967 - #37 (
INFO  10:40:21,967 - #45 x
INFO  10:40:21,967 - #38 )
INFO  10:40:21,967 - #33 ;
INFO  10:40:21,967 - #42 }
INFO  10:40:21,967 - #42 }
INFO  10:40:21,968 - #42 }
ERROR 10:40:21,968 - Fatal error, parsing will not continue on line 60
