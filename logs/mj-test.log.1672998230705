INFO  10:40:43,761 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:40:43,803 - #2 program
INFO  10:40:43,803 - #45 p
INFO  10:40:43,803 - #6 const
INFO  10:40:43,804 - #45 int
INFO  10:40:43,804 - #45 size
INFO  10:40:43,805 - #30 =
INFO  10:40:43,805 - #44 10
INFO  10:40:43,805 - #33 ;
INFO  10:40:43,806 - #4 class
INFO  10:40:43,807 - #45 Table
INFO  10:40:43,807 - #41 {
INFO  10:40:43,808 - #45 int
INFO  10:40:43,809 - #45 pos
INFO  10:40:43,809 - #39 [
INFO  10:40:43,809 - #40 ]
INFO  10:40:43,809 - #35 ,
INFO  10:40:43,811 - #45 neg
INFO  10:40:43,812 - #39 [
INFO  10:40:43,812 - #40 ]
INFO  10:40:43,812 - #35 ,
INFO  10:40:43,812 - #45 factor
INFO  10:40:43,812 - #33 ;
INFO  10:40:43,821 - #41 {
INFO  10:40:43,822 - #45 Table
INFO  10:40:43,822 - #37 (
INFO  10:40:43,822 - #45 int
INFO  10:40:43,822 - #45 factor
INFO  10:40:43,823 - #38 )
INFO  10:40:43,823 - #41 {
INFO  10:40:43,823 - #45 this
INFO  10:40:43,823 - #36 .
INFO  10:40:43,824 - #45 factor
INFO  10:40:43,824 - #30 =
INFO  10:40:43,824 - #45 factor
INFO  10:40:43,824 - #33 ;
INFO  10:40:43,824 - #42 }
INFO  10:40:43,825 - #13 void
INFO  10:40:43,826 - #45 putp
INFO  10:40:43,826 - #37 (
INFO  10:40:43,826 - #45 int
INFO  10:40:43,826 - #45 a
INFO  10:40:43,826 - #35 ,
INFO  10:40:43,826 - #45 int
INFO  10:40:43,826 - #45 idx
INFO  10:40:43,826 - #38 )
INFO  10:40:43,827 - #41 {
INFO  10:40:43,827 - #45 this
INFO  10:40:43,827 - #36 .
INFO  10:40:43,827 - #45 pos
INFO  10:40:43,827 - #39 [
INFO  10:40:43,827 - #45 idx
INFO  10:40:43,827 - #40 ]
INFO  10:40:43,827 - #30 =
INFO  10:40:43,827 - #45 a
INFO  10:40:43,827 - #33 ;
INFO  10:40:43,827 - #42 }
INFO  10:40:43,827 - #13 void
INFO  10:40:43,828 - #45 putn
INFO  10:40:43,828 - #37 (
INFO  10:40:43,828 - #45 int
INFO  10:40:43,828 - #45 a
INFO  10:40:43,828 - #35 ,
INFO  10:40:43,828 - #45 int
INFO  10:40:43,828 - #45 idx
INFO  10:40:43,828 - #38 )
INFO  10:40:43,828 - #41 {
INFO  10:40:43,829 - #45 this
INFO  10:40:43,829 - #36 .
INFO  10:40:43,829 - #45 neg
INFO  10:40:43,829 - #39 [
INFO  10:40:43,829 - #45 idx
INFO  10:40:43,829 - #40 ]
INFO  10:40:43,829 - #30 =
INFO  10:40:43,829 - #45 a
INFO  10:40:43,829 - #33 ;
INFO  10:40:43,829 - #42 }
INFO  10:40:43,830 - #45 int
INFO  10:40:43,830 - #45 getp
INFO  10:40:43,830 - #37 (
INFO  10:40:43,830 - #45 int
INFO  10:40:43,830 - #45 idx
INFO  10:40:43,830 - #38 )
INFO  10:40:43,830 - #41 {
INFO  10:40:43,830 - #12 return
INFO  10:40:43,830 - #45 pos
INFO  10:40:43,830 - #39 [
INFO  10:40:43,830 - #45 idx
INFO  10:40:43,830 - #40 ]
INFO  10:40:43,831 - #33 ;
INFO  10:40:43,831 - #42 }
INFO  10:40:43,831 - #45 int
INFO  10:40:43,831 - #45 getn
INFO  10:40:43,831 - #37 (
INFO  10:40:43,831 - #45 int
INFO  10:40:43,831 - #45 idx
INFO  10:40:43,831 - #38 )
INFO  10:40:43,831 - #41 {
INFO  10:40:43,831 - #12 return
INFO  10:40:43,831 - #45 neg
INFO  10:40:43,831 - #39 [
INFO  10:40:43,831 - #45 idx
INFO  10:40:43,832 - #40 ]
INFO  10:40:43,832 - #33 ;
INFO  10:40:43,832 - #42 }
INFO  10:40:43,832 - #42 }
INFO  10:40:43,832 - #42 }
INFO  10:40:43,832 - #45 Table
INFO  10:40:43,833 - #45 val
INFO  10:40:43,833 - #33 ;
INFO  10:40:43,833 - #45 Int
INFO  10:40:43,834 - #45 rows
INFO  10:40:43,834 - #35 ,
INFO  10:40:43,834 - #45 columns
INFO  10:40:43,834 - #33 ;
INFO  10:40:43,834 - #41 {
INFO  10:40:43,834 - #13 void
INFO  10:40:43,835 - #45 f
INFO  10:40:43,835 - #37 (
INFO  10:40:43,835 - #45 char
INFO  10:40:43,835 - #45 ch
INFO  10:40:43,835 - #35 ,
INFO  10:40:43,836 - #45 int
INFO  10:40:43,836 - #45 a
INFO  10:40:43,836 - #35 ,
INFO  10:40:43,836 - #35 ,
ERROR 10:40:43,836 - 
Syntax Error on line 26
INFO  10:40:43,836 - #45 int
INFO  10:40:43,836 - #45 arg
INFO  10:40:43,836 - #38 )
INFO  10:40:43,839 - #45 int
INFO  10:40:43,839 - #45 x
INFO  10:40:43,839 - #33 ;
INFO  10:40:43,839 - #41 {
INFO  10:40:43,839 - #45 x
INFO  10:40:43,839 - #30 =
INFO  10:40:43,839 - #45 arg
INFO  10:40:43,839 - #33 ;
INFO  10:40:43,840 - #42 }
INFO  10:40:43,840 - #13 void
INFO  10:40:43,840 - #45 main
INFO  10:40:43,840 - #37 (
INFO  10:40:43,840 - #38 )
INFO  10:40:43,840 - #45 int
INFO  10:40:43,840 - #45 x
INFO  10:40:43,840 - #35 ,
INFO  10:40:43,840 - #45 i
INFO  10:40:43,841 - #33 ;
INFO  10:40:43,841 - #45 char
INFO  10:40:43,841 - #45 c
INFO  10:40:43,841 - #33 ;
INFO  10:40:43,841 - #45 int
INFO  10:40:43,841 - #45 arr
INFO  10:40:43,842 - #39 [
INFO  10:40:43,842 - #40 ]
INFO  10:40:43,842 - #33 ;
INFO  10:40:43,842 - #41 {
INFO  10:40:43,842 - #45 val
INFO  10:40:43,842 - #30 =
INFO  10:40:43,843 - #9 new
INFO  10:40:43,843 - #45 Table
INFO  10:40:43,843 - #37 (
INFO  10:40:43,843 - #44 2
INFO  10:40:43,843 - #38 )
INFO  10:40:43,843 - #33 ;
INFO  10:40:43,843 - #45 arr
INFO  10:40:43,843 - #30 =
INFO  10:40:43,843 - #9 new
INFO  10:40:43,843 - #45 int
INFO  10:40:43,843 - #39 [
INFO  10:40:43,843 - #44 3
INFO  10:40:43,843 - #40 ]
INFO  10:40:43,843 - #33 ;
INFO  10:40:43,844 - #45 i
INFO  10:40:43,844 - #30 =
INFO  10:40:43,844 - #44 0
INFO  10:40:43,845 - #33 ;
INFO  10:40:43,845 - #8 while
INFO  10:40:43,845 - #37 (
INFO  10:40:43,845 - #45 i
INFO  10:40:43,845 - #26 <
INFO  10:40:43,845 - #44 3
INFO  10:40:43,845 - #38 )
INFO  10:40:43,845 - #41 {
INFO  10:40:43,845 - #45 arr
INFO  10:40:43,846 - #39 [
INFO  10:40:43,846 - #45 i
INFO  10:40:43,846 - #40 ]
INFO  10:40:43,846 - #30 =
INFO  10:40:43,846 - #45 i
INFO  10:40:43,846 - #33 ;
INFO  10:40:43,846 - #45 i
INFO  10:40:43,846 - #31 ++
INFO  10:40:43,846 - #33 ;
INFO  10:40:43,846 - #42 }
INFO  10:40:43,846 - #45 arr
INFO  10:40:43,846 - #36 .
INFO  10:40:43,846 - #16 foreach
INFO  10:40:43,846 - #37 (
INFO  10:40:43,847 - #45 x
INFO  10:40:43,847 - #43 =>
INFO  10:40:43,847 - #10 print
INFO  10:40:43,847 - #37 (
INFO  10:40:43,847 - #45 x
INFO  10:40:43,847 - #38 )
INFO  10:40:43,847 - #33 ;
INFO  10:40:43,847 - #38 )
INFO  10:40:43,847 - #33 ;
INFO  10:40:43,847 - #45 val
INFO  10:40:43,847 - #36 .
INFO  10:40:43,847 - #45 pos
INFO  10:40:43,847 - #30 =
INFO  10:40:43,847 - #9 new
INFO  10:40:43,847 - #45 int
INFO  10:40:43,847 - #39 [
INFO  10:40:43,848 - #45 size
INFO  10:40:43,848 - #40 ]
INFO  10:40:43,848 - #33 ;
INFO  10:40:43,848 - #45 val
INFO  10:40:43,848 - #36 .
INFO  10:40:43,848 - #45 neg
INFO  10:40:43,848 - #30 =
INFO  10:40:43,848 - #9 new
INFO  10:40:43,848 - #45 int
INFO  10:40:43,848 - #39 [
INFO  10:40:43,848 - #45 size
INFO  10:40:43,848 - #40 ]
INFO  10:40:43,848 - #33 ;
INFO  10:40:43,848 - #11 read
INFO  10:40:43,848 - #37 (
INFO  10:40:43,849 - #45 x
INFO  10:40:43,849 - #38 )
INFO  10:40:43,849 - #33 ;
INFO  10:40:43,849 - #39 [
INFO  10:40:43,849 - #45 i
INFO  10:40:43,849 - #35 ,
INFO  10:40:43,849 - #45 x
INFO  10:40:43,849 - #40 ]
INFO  10:40:43,849 - #30 =
INFO  10:40:43,849 - #45 arr
INFO  10:40:43,849 - #33 ;
INFO  10:40:43,849 - #8 while
INFO  10:40:43,849 - #37 (
INFO  10:40:43,849 - #45 i
INFO  10:40:43,850 - #26 <
INFO  10:40:43,850 - #45 size
INFO  10:40:43,850 - #38 )
INFO  10:40:43,850 - #41 {
INFO  10:40:43,850 - #45 val
INFO  10:40:43,850 - #36 .
INFO  10:40:43,850 - #45 putp
INFO  10:40:43,850 - #37 (
INFO  10:40:43,850 - #44 0
INFO  10:40:43,850 - #35 ,
INFO  10:40:43,850 - #45 i
INFO  10:40:43,851 - #38 )
INFO  10:40:43,851 - #33 ;
INFO  10:40:43,851 - #45 val
INFO  10:40:43,851 - #36 .
INFO  10:40:43,851 - #45 putn
INFO  10:40:43,851 - #37 (
INFO  10:40:43,851 - #44 0
INFO  10:40:43,851 - #35 ,
INFO  10:40:43,851 - #45 i
INFO  10:40:43,851 - #38 )
INFO  10:40:43,851 - #33 ;
INFO  10:40:43,852 - #45 i
INFO  10:40:43,852 - #31 ++
INFO  10:40:43,852 - #33 ;
INFO  10:40:43,852 - #42 }
INFO  10:40:43,852 - #45 f
INFO  10:40:43,852 - #37 (
INFO  10:40:43,852 - #45 c
INFO  10:40:43,852 - #35 ,
INFO  10:40:43,852 - #45 x
INFO  10:40:43,852 - #35 ,
INFO  10:40:43,852 - #45 i
INFO  10:40:43,852 - #38 )
INFO  10:40:43,852 - #33 ;
INFO  10:40:43,852 - #11 read
INFO  10:40:43,852 - #37 (
INFO  10:40:43,852 - #45 rows
INFO  10:40:43,852 - #38 )
INFO  10:40:43,852 - #33 ;
INFO  10:40:43,852 - #45 x
INFO  10:40:43,852 - #30 =
INFO  10:40:43,852 - #45 rows
INFO  10:40:43,852 - #33 ;
INFO  10:40:43,852 - #8 while
INFO  10:40:43,852 - #37 (
INFO  10:40:43,852 - #46 true
INFO  10:40:43,852 - #38 )
INFO  10:40:43,852 - #41 {
INFO  10:40:43,852 - #7 if
INFO  10:40:43,852 - #37 (
INFO  10:40:43,853 - #45 x
INFO  10:40:43,853 - #27 <=
INFO  10:40:43,853 - #44 0
INFO  10:40:43,853 - #38 )
INFO  10:40:43,853 - #3 break
INFO  10:40:43,853 - #33 ;
INFO  10:40:43,853 - #7 if
INFO  10:40:43,853 - #37 (
INFO  10:40:43,853 - #44 0
INFO  10:40:43,853 - #27 <=
INFO  10:40:43,853 - #45 x
INFO  10:40:43,853 - #28 &&
INFO  10:40:43,853 - #45 x
INFO  10:40:43,853 - #26 <
INFO  10:40:43,853 - #45 size
INFO  10:40:43,853 - #38 )
INFO  10:40:43,853 - #41 {
INFO  10:40:43,854 - #45 val
INFO  10:40:43,854 - #36 .
INFO  10:40:43,854 - #45 putp
INFO  10:40:43,854 - #37 (
INFO  10:40:43,854 - #45 val
INFO  10:40:43,854 - #36 .
INFO  10:40:43,854 - #45 getp
INFO  10:40:43,854 - #37 (
INFO  10:40:43,854 - #45 x
INFO  10:40:43,854 - #38 )
INFO  10:40:43,854 - #17 +
INFO  10:40:43,854 - #44 1
INFO  10:40:43,854 - #38 )
INFO  10:40:43,854 - #33 ;
INFO  10:40:43,854 - #42 }
INFO  10:40:43,855 - #5 else
INFO  10:40:43,855 - #7 if
INFO  10:40:43,855 - #37 (
INFO  10:40:43,855 - #18 -
INFO  10:40:43,855 - #45 size
INFO  10:40:43,855 - #26 <
INFO  10:40:43,855 - #45 x
INFO  10:40:43,855 - #28 &&
INFO  10:40:43,855 - #45 x
INFO  10:40:43,855 - #26 <
INFO  10:40:43,855 - #44 0
INFO  10:40:43,855 - #38 )
INFO  10:40:43,855 - #41 {
INFO  10:40:43,855 - #45 val
INFO  10:40:43,855 - #36 .
INFO  10:40:43,855 - #45 putn
INFO  10:40:43,855 - #37 (
INFO  10:40:43,855 - #45 val
INFO  10:40:43,855 - #36 .
INFO  10:40:43,856 - #45 getn
INFO  10:40:43,856 - #37 (
INFO  10:40:43,856 - #18 -
INFO  10:40:43,856 - #45 x
INFO  10:40:43,856 - #38 )
INFO  10:40:43,856 - #17 +
INFO  10:40:43,856 - #44 1
INFO  10:40:43,856 - #38 )
INFO  10:40:43,856 - #33 ;
INFO  10:40:43,856 - #42 }
INFO  10:40:43,856 - #11 read
INFO  10:40:43,856 - #37 (
INFO  10:40:43,856 - #45 x
INFO  10:40:43,856 - #38 )
INFO  10:40:43,856 - #33 ;
INFO  10:40:43,856 - #42 }
INFO  10:40:43,856 - #42 }
INFO  10:40:43,856 - #42 }
ERROR 10:40:43,856 - Fatal error, parsing will not continue on line 60
