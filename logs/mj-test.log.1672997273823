INFO  10:27:32,050 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:27:32,085 - #2 program
INFO  10:27:32,085 - #45 p
INFO  10:27:32,085 - #6 const
INFO  10:27:32,085 - #45 int
INFO  10:27:32,085 - #45 size
INFO  10:27:32,085 - #30 =
INFO  10:27:32,085 - #44 10
INFO  10:27:32,086 - #33 ;
INFO  10:27:32,087 - #4 class
INFO  10:27:32,088 - #45 Table
INFO  10:27:32,088 - #14 extends
INFO  10:27:32,089 - #41 {
ERROR 10:27:32,089 - 
Syntax Error on line 3
INFO  10:27:32,089 - #45 int
INFO  10:27:32,089 - #45 pos
INFO  10:27:32,089 - #39 [
INFO  10:27:32,090 - #40 ]
INFO  10:27:32,090 - #35 ,
INFO  10:27:32,090 - #45 neg
INFO  10:27:32,090 - #39 [
INFO  10:27:32,090 - #40 ]
INFO  10:27:32,091 - #35 ,
INFO  10:27:32,091 - #45 factor
INFO  10:27:32,091 - #33 ;
INFO  10:27:32,091 - #41 {
INFO  10:27:32,091 - #45 Table
INFO  10:27:32,091 - #37 (
INFO  10:27:32,091 - #45 int
INFO  10:27:32,091 - #45 factor
INFO  10:27:32,091 - #38 )
INFO  10:27:32,093 - #41 {
INFO  10:27:32,093 - #45 this
INFO  10:27:32,093 - #36 .
INFO  10:27:32,093 - #45 factor
INFO  10:27:32,093 - #30 =
INFO  10:27:32,093 - #45 factor
INFO  10:27:32,093 - #33 ;
INFO  10:27:32,093 - #42 }
INFO  10:27:32,094 - #13 void
INFO  10:27:32,094 - #45 putp
INFO  10:27:32,094 - #37 (
INFO  10:27:32,094 - #45 int
INFO  10:27:32,094 - #45 a
INFO  10:27:32,094 - #35 ,
INFO  10:27:32,094 - #45 int
INFO  10:27:32,094 - #45 idx
INFO  10:27:32,094 - #38 )
INFO  10:27:32,094 - #41 {
INFO  10:27:32,094 - #45 this
INFO  10:27:32,094 - #36 .
INFO  10:27:32,095 - #45 pos
INFO  10:27:32,095 - #39 [
INFO  10:27:32,095 - #45 idx
INFO  10:27:32,095 - #40 ]
INFO  10:27:32,095 - #30 =
INFO  10:27:32,095 - #45 a
INFO  10:27:32,095 - #33 ;
INFO  10:27:32,095 - #42 }
INFO  10:27:32,095 - #13 void
INFO  10:27:32,095 - #45 putn
INFO  10:27:32,095 - #37 (
INFO  10:27:32,095 - #45 int
INFO  10:27:32,096 - #45 a
INFO  10:27:32,096 - #35 ,
INFO  10:27:32,096 - #45 int
INFO  10:27:32,096 - #45 idx
INFO  10:27:32,096 - #38 )
INFO  10:27:32,096 - #41 {
INFO  10:27:32,096 - #45 this
INFO  10:27:32,096 - #36 .
INFO  10:27:32,097 - #45 neg
INFO  10:27:32,097 - #39 [
INFO  10:27:32,097 - #45 idx
INFO  10:27:32,097 - #40 ]
INFO  10:27:32,097 - #30 =
INFO  10:27:32,097 - #45 a
INFO  10:27:32,097 - #33 ;
INFO  10:27:32,097 - #42 }
INFO  10:27:32,098 - #45 int
INFO  10:27:32,098 - #45 getp
INFO  10:27:32,098 - #37 (
INFO  10:27:32,098 - #45 int
INFO  10:27:32,098 - #45 idx
INFO  10:27:32,098 - #38 )
INFO  10:27:32,098 - #41 {
INFO  10:27:32,098 - #12 return
INFO  10:27:32,098 - #45 pos
INFO  10:27:32,098 - #39 [
INFO  10:27:32,099 - #45 idx
INFO  10:27:32,099 - #40 ]
INFO  10:27:32,099 - #33 ;
INFO  10:27:32,099 - #42 }
INFO  10:27:32,099 - #45 int
INFO  10:27:32,099 - #45 getn
INFO  10:27:32,099 - #37 (
INFO  10:27:32,099 - #45 int
INFO  10:27:32,099 - #45 idx
INFO  10:27:32,100 - #38 )
INFO  10:27:32,100 - #41 {
INFO  10:27:32,100 - #12 return
INFO  10:27:32,100 - #45 neg
INFO  10:27:32,100 - #39 [
INFO  10:27:32,100 - #45 idx
INFO  10:27:32,100 - #40 ]
INFO  10:27:32,100 - #33 ;
INFO  10:27:32,100 - #42 }
INFO  10:27:32,100 - #42 }
INFO  10:27:32,100 - #42 }
INFO  10:27:32,100 - #45 Table
INFO  10:27:32,101 - #45 val
INFO  10:27:32,101 - #33 ;
INFO  10:27:32,101 - #45 Int
INFO  10:27:32,101 - #45 rows
INFO  10:27:32,101 - #35 ,
INFO  10:27:32,101 - #45 columns
INFO  10:27:32,101 - #33 ;
INFO  10:27:32,101 - #41 {
INFO  10:27:32,101 - #13 void
INFO  10:27:32,102 - #45 f
INFO  10:27:32,102 - #37 (
INFO  10:27:32,102 - #45 char
INFO  10:27:32,102 - #45 ch
INFO  10:27:32,102 - #35 ,
INFO  10:27:32,102 - #45 int
INFO  10:27:32,102 - #45 a
INFO  10:27:32,103 - #35 ,
INFO  10:27:32,103 - #45 int
INFO  10:27:32,103 - #45 arg
INFO  10:27:32,104 - #38 )
INFO  10:27:32,105 - #45 int
INFO  10:27:32,106 - #45 x
INFO  10:27:32,106 - #33 ;
INFO  10:27:32,106 - #41 {
INFO  10:27:32,107 - #45 x
INFO  10:27:32,107 - #30 =
INFO  10:27:32,107 - #45 arg
INFO  10:27:32,107 - #33 ;
INFO  10:27:32,108 - #42 }
INFO  10:27:32,108 - #13 void
INFO  10:27:32,108 - #45 main
INFO  10:27:32,108 - #37 (
INFO  10:27:32,108 - #38 )
INFO  10:27:32,108 - #45 int
INFO  10:27:32,108 - #45 x
INFO  10:27:32,108 - #35 ,
INFO  10:27:32,109 - #45 i
INFO  10:27:32,109 - #33 ;
INFO  10:27:32,109 - #45 char
INFO  10:27:32,109 - #45 c
INFO  10:27:32,109 - #35 ,
INFO  10:27:32,109 - #45 int
INFO  10:27:32,109 - #45 arr
INFO  10:27:32,109 - #39 [
INFO  10:27:32,109 - #40 ]
INFO  10:27:32,109 - #33 ;
INFO  10:27:32,109 - #41 {
INFO  10:27:32,110 - #45 val
INFO  10:27:32,110 - #30 =
INFO  10:27:32,110 - #9 new
INFO  10:27:32,110 - #45 Table
INFO  10:27:32,110 - #37 (
INFO  10:27:32,110 - #44 2
INFO  10:27:32,110 - #38 )
INFO  10:27:32,110 - #33 ;
INFO  10:27:32,110 - #45 arr
INFO  10:27:32,110 - #30 =
INFO  10:27:32,110 - #9 new
INFO  10:27:32,110 - #45 int
INFO  10:27:32,110 - #39 [
INFO  10:27:32,110 - #44 3
INFO  10:27:32,110 - #40 ]
INFO  10:27:32,110 - #33 ;
INFO  10:27:32,111 - #45 i
INFO  10:27:32,111 - #30 =
INFO  10:27:32,111 - #44 0
INFO  10:27:32,111 - #33 ;
INFO  10:27:32,111 - #8 while
INFO  10:27:32,111 - #37 (
INFO  10:27:32,111 - #45 i
INFO  10:27:32,111 - #26 <
INFO  10:27:32,111 - #44 3
INFO  10:27:32,111 - #38 )
INFO  10:27:32,111 - #41 {
INFO  10:27:32,111 - #45 arr
INFO  10:27:32,111 - #39 [
INFO  10:27:32,111 - #45 i
INFO  10:27:32,111 - #40 ]
INFO  10:27:32,111 - #30 =
INFO  10:27:32,111 - #45 i
INFO  10:27:32,112 - #33 ;
INFO  10:27:32,112 - #45 i
INFO  10:27:32,112 - #31 ++
INFO  10:27:32,112 - #33 ;
INFO  10:27:32,112 - #42 }
INFO  10:27:32,112 - #45 arr
INFO  10:27:32,112 - #36 .
INFO  10:27:32,112 - #16 foreach
INFO  10:27:32,112 - #37 (
INFO  10:27:32,112 - #45 x
INFO  10:27:32,112 - #43 =>
INFO  10:27:32,112 - #10 print
INFO  10:27:32,112 - #37 (
INFO  10:27:32,112 - #45 x
INFO  10:27:32,113 - #38 )
INFO  10:27:32,113 - #33 ;
INFO  10:27:32,113 - #38 )
INFO  10:27:32,113 - #33 ;
INFO  10:27:32,113 - #45 val
INFO  10:27:32,113 - #36 .
INFO  10:27:32,113 - #45 pos
INFO  10:27:32,113 - #30 =
INFO  10:27:32,113 - #9 new
INFO  10:27:32,113 - #45 int
INFO  10:27:32,113 - #39 [
INFO  10:27:32,113 - #45 size
INFO  10:27:32,113 - #40 ]
INFO  10:27:32,113 - #33 ;
INFO  10:27:32,113 - #45 val
INFO  10:27:32,113 - #36 .
INFO  10:27:32,113 - #45 neg
INFO  10:27:32,113 - #30 =
INFO  10:27:32,113 - #9 new
INFO  10:27:32,113 - #45 int
INFO  10:27:32,114 - #39 [
INFO  10:27:32,114 - #45 size
INFO  10:27:32,114 - #40 ]
INFO  10:27:32,114 - #33 ;
INFO  10:27:32,114 - #11 read
INFO  10:27:32,114 - #37 (
INFO  10:27:32,114 - #45 x
INFO  10:27:32,114 - #38 )
INFO  10:27:32,114 - #33 ;
INFO  10:27:32,114 - #39 [
INFO  10:27:32,114 - #45 i
INFO  10:27:32,114 - #35 ,
INFO  10:27:32,114 - #35 ,
INFO  10:27:32,114 - #45 x
INFO  10:27:32,114 - #40 ]
INFO  10:27:32,114 - #30 =
INFO  10:27:32,115 - #45 arr
INFO  10:27:32,115 - #33 ;
INFO  10:27:32,115 - #8 while
INFO  10:27:32,115 - #37 (
INFO  10:27:32,115 - #45 i
INFO  10:27:32,115 - #26 <
INFO  10:27:32,115 - #45 size
INFO  10:27:32,115 - #38 )
INFO  10:27:32,115 - #41 {
INFO  10:27:32,115 - #45 val
INFO  10:27:32,115 - #36 .
INFO  10:27:32,115 - #45 putp
INFO  10:27:32,115 - #37 (
INFO  10:27:32,115 - #44 0
INFO  10:27:32,115 - #35 ,
INFO  10:27:32,115 - #45 i
INFO  10:27:32,116 - #38 )
INFO  10:27:32,116 - #33 ;
INFO  10:27:32,116 - #45 val
INFO  10:27:32,116 - #36 .
INFO  10:27:32,116 - #45 putn
INFO  10:27:32,116 - #37 (
INFO  10:27:32,116 - #44 0
INFO  10:27:32,116 - #35 ,
INFO  10:27:32,116 - #45 i
INFO  10:27:32,116 - #38 )
INFO  10:27:32,117 - #33 ;
INFO  10:27:32,117 - #45 i
INFO  10:27:32,117 - #31 ++
INFO  10:27:32,117 - #33 ;
INFO  10:27:32,117 - #42 }
INFO  10:27:32,117 - #45 f
INFO  10:27:32,117 - #37 (
INFO  10:27:32,117 - #45 c
INFO  10:27:32,117 - #35 ,
INFO  10:27:32,117 - #45 x
INFO  10:27:32,117 - #35 ,
INFO  10:27:32,117 - #45 i
INFO  10:27:32,117 - #38 )
INFO  10:27:32,117 - #33 ;
INFO  10:27:32,117 - #11 read
INFO  10:27:32,117 - #37 (
INFO  10:27:32,117 - #45 rows
INFO  10:27:32,117 - #38 )
INFO  10:27:32,117 - #33 ;
INFO  10:27:32,117 - #45 x
INFO  10:27:32,118 - #30 =
INFO  10:27:32,118 - #45 rows
INFO  10:27:32,118 - #33 ;
INFO  10:27:32,118 - #8 while
INFO  10:27:32,118 - #37 (
INFO  10:27:32,118 - #46 true
INFO  10:27:32,118 - #38 )
INFO  10:27:32,118 - #41 {
INFO  10:27:32,118 - #7 if
INFO  10:27:32,118 - #37 (
INFO  10:27:32,118 - #45 x
INFO  10:27:32,118 - #27 <=
INFO  10:27:32,118 - #44 0
INFO  10:27:32,118 - #38 )
INFO  10:27:32,118 - #3 break
INFO  10:27:32,118 - #33 ;
INFO  10:27:32,118 - #7 if
INFO  10:27:32,118 - #37 (
INFO  10:27:32,118 - #44 0
INFO  10:27:32,118 - #27 <=
INFO  10:27:32,118 - #45 x
INFO  10:27:32,118 - #28 &&
INFO  10:27:32,118 - #45 x
INFO  10:27:32,119 - #26 <
INFO  10:27:32,119 - #45 size
INFO  10:27:32,119 - #38 )
INFO  10:27:32,119 - #41 {
INFO  10:27:32,119 - #45 val
INFO  10:27:32,119 - #36 .
INFO  10:27:32,119 - #45 putp
INFO  10:27:32,119 - #37 (
INFO  10:27:32,119 - #45 val
INFO  10:27:32,119 - #36 .
INFO  10:27:32,119 - #45 getp
INFO  10:27:32,119 - #37 (
INFO  10:27:32,119 - #45 x
INFO  10:27:32,119 - #38 )
INFO  10:27:32,119 - #17 +
INFO  10:27:32,119 - #44 1
INFO  10:27:32,119 - #38 )
INFO  10:27:32,119 - #33 ;
INFO  10:27:32,119 - #42 }
INFO  10:27:32,119 - #5 else
INFO  10:27:32,119 - #7 if
INFO  10:27:32,119 - #37 (
INFO  10:27:32,119 - #18 -
INFO  10:27:32,120 - #45 size
INFO  10:27:32,120 - #26 <
INFO  10:27:32,120 - #45 x
INFO  10:27:32,120 - #28 &&
INFO  10:27:32,120 - #45 x
INFO  10:27:32,120 - #26 <
INFO  10:27:32,120 - #44 0
INFO  10:27:32,120 - #38 )
INFO  10:27:32,120 - #41 {
INFO  10:27:32,120 - #45 val
INFO  10:27:32,120 - #36 .
INFO  10:27:32,120 - #45 putn
INFO  10:27:32,120 - #37 (
INFO  10:27:32,120 - #45 val
INFO  10:27:32,120 - #36 .
INFO  10:27:32,120 - #45 getn
INFO  10:27:32,120 - #37 (
INFO  10:27:32,120 - #18 -
INFO  10:27:32,120 - #45 x
INFO  10:27:32,120 - #38 )
INFO  10:27:32,120 - #17 +
INFO  10:27:32,120 - #44 1
INFO  10:27:32,120 - #38 )
INFO  10:27:32,120 - #33 ;
INFO  10:27:32,120 - #42 }
INFO  10:27:32,120 - #11 read
INFO  10:27:32,120 - #37 (
INFO  10:27:32,120 - #45 x
INFO  10:27:32,120 - #38 )
INFO  10:27:32,120 - #33 ;
INFO  10:27:32,122 - #42 }
INFO  10:27:32,122 - #42 }
INFO  10:27:32,122 - #42 }
ERROR 10:27:32,122 - Fatal error, parsing will not continue on line 58
