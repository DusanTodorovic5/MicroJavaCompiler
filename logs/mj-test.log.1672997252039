INFO  10:25:55,971 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:25:56,000 - #2 program
INFO  10:25:56,001 - #45 p
INFO  10:25:56,001 - #6 const
INFO  10:25:56,001 - #45 int
INFO  10:25:56,001 - #45 size
INFO  10:25:56,002 - #30 =
INFO  10:25:56,002 - #44 10
INFO  10:25:56,002 - #33 ;
INFO  10:25:56,002 - #4 class
INFO  10:25:56,003 - #45 Table
INFO  10:25:56,003 - #14 extends
INFO  10:25:56,003 - #17 +
ERROR 10:25:56,003 - 
Syntax Error on line 3
INFO  10:25:56,003 - #41 {
INFO  10:25:56,003 - #45 int
INFO  10:25:56,003 - #45 pos
INFO  10:25:56,004 - #39 [
INFO  10:25:56,004 - #40 ]
INFO  10:25:56,004 - #35 ,
INFO  10:25:56,004 - #45 neg
INFO  10:25:56,004 - #39 [
INFO  10:25:56,013 - #40 ]
INFO  10:25:56,013 - #35 ,
INFO  10:25:56,013 - #45 factor
INFO  10:25:56,013 - #33 ;
INFO  10:25:56,013 - #41 {
INFO  10:25:56,013 - #45 Table
INFO  10:25:56,013 - #37 (
INFO  10:25:56,013 - #45 int
INFO  10:25:56,013 - #45 factor
INFO  10:25:56,013 - #38 )
INFO  10:25:56,013 - #41 {
INFO  10:25:56,013 - #45 this
INFO  10:25:56,013 - #36 .
INFO  10:25:56,014 - #45 factor
INFO  10:25:56,014 - #30 =
INFO  10:25:56,014 - #45 factor
INFO  10:25:56,014 - #33 ;
INFO  10:25:56,014 - #42 }
INFO  10:25:56,014 - #13 void
INFO  10:25:56,014 - #45 putp
INFO  10:25:56,014 - #37 (
INFO  10:25:56,014 - #45 int
INFO  10:25:56,014 - #45 a
INFO  10:25:56,014 - #35 ,
INFO  10:25:56,014 - #45 int
INFO  10:25:56,014 - #45 idx
INFO  10:25:56,014 - #38 )
INFO  10:25:56,014 - #41 {
INFO  10:25:56,014 - #45 this
INFO  10:25:56,014 - #36 .
INFO  10:25:56,014 - #45 pos
INFO  10:25:56,014 - #39 [
INFO  10:25:56,014 - #45 idx
INFO  10:25:56,014 - #40 ]
INFO  10:25:56,014 - #30 =
INFO  10:25:56,014 - #45 a
INFO  10:25:56,014 - #33 ;
INFO  10:25:56,014 - #42 }
INFO  10:25:56,015 - #13 void
INFO  10:25:56,015 - #45 putn
INFO  10:25:56,015 - #37 (
INFO  10:25:56,015 - #45 int
INFO  10:25:56,015 - #45 a
INFO  10:25:56,015 - #35 ,
INFO  10:25:56,015 - #45 int
INFO  10:25:56,015 - #45 idx
INFO  10:25:56,015 - #38 )
INFO  10:25:56,015 - #41 {
INFO  10:25:56,015 - #45 this
INFO  10:25:56,015 - #36 .
INFO  10:25:56,015 - #45 neg
INFO  10:25:56,015 - #39 [
INFO  10:25:56,016 - #45 idx
INFO  10:25:56,016 - #40 ]
INFO  10:25:56,016 - #30 =
INFO  10:25:56,016 - #45 a
INFO  10:25:56,016 - #33 ;
INFO  10:25:56,016 - #42 }
INFO  10:25:56,016 - #45 int
INFO  10:25:56,016 - #45 getp
INFO  10:25:56,016 - #37 (
INFO  10:25:56,016 - #45 int
INFO  10:25:56,016 - #45 idx
INFO  10:25:56,016 - #38 )
INFO  10:25:56,016 - #41 {
INFO  10:25:56,016 - #12 return
INFO  10:25:56,016 - #45 pos
INFO  10:25:56,017 - #39 [
INFO  10:25:56,017 - #45 idx
INFO  10:25:56,017 - #40 ]
INFO  10:25:56,017 - #33 ;
INFO  10:25:56,017 - #42 }
INFO  10:25:56,017 - #45 int
INFO  10:25:56,017 - #45 getn
INFO  10:25:56,017 - #37 (
INFO  10:25:56,017 - #45 int
INFO  10:25:56,017 - #45 idx
INFO  10:25:56,017 - #38 )
INFO  10:25:56,017 - #41 {
INFO  10:25:56,018 - #12 return
INFO  10:25:56,018 - #45 neg
INFO  10:25:56,018 - #39 [
INFO  10:25:56,018 - #45 idx
INFO  10:25:56,018 - #40 ]
INFO  10:25:56,018 - #33 ;
INFO  10:25:56,018 - #42 }
INFO  10:25:56,018 - #42 }
INFO  10:25:56,018 - #42 }
INFO  10:25:56,018 - #45 Table
INFO  10:25:56,018 - #45 val
INFO  10:25:56,018 - #33 ;
INFO  10:25:56,018 - #45 Int
INFO  10:25:56,018 - #45 rows
INFO  10:25:56,018 - #35 ,
INFO  10:25:56,018 - #45 columns
INFO  10:25:56,019 - #33 ;
INFO  10:25:56,019 - #41 {
INFO  10:25:56,019 - #13 void
INFO  10:25:56,019 - #45 f
INFO  10:25:56,019 - #37 (
INFO  10:25:56,019 - #45 char
INFO  10:25:56,019 - #45 ch
INFO  10:25:56,019 - #35 ,
INFO  10:25:56,019 - #45 int
INFO  10:25:56,019 - #45 a
INFO  10:25:56,019 - #35 ,
INFO  10:25:56,019 - #45 int
INFO  10:25:56,020 - #45 arg
INFO  10:25:56,020 - #38 )
INFO  10:25:56,020 - #45 int
INFO  10:25:56,020 - #45 x
INFO  10:25:56,020 - #33 ;
INFO  10:25:56,020 - #41 {
INFO  10:25:56,020 - #45 x
INFO  10:25:56,020 - #30 =
INFO  10:25:56,020 - #45 arg
INFO  10:25:56,020 - #33 ;
INFO  10:25:56,020 - #42 }
INFO  10:25:56,020 - #13 void
INFO  10:25:56,020 - #45 main
INFO  10:25:56,020 - #37 (
INFO  10:25:56,020 - #38 )
INFO  10:25:56,020 - #45 int
INFO  10:25:56,022 - #45 x
INFO  10:25:56,022 - #35 ,
INFO  10:25:56,022 - #45 i
INFO  10:25:56,022 - #33 ;
INFO  10:25:56,022 - #45 char
INFO  10:25:56,022 - #45 c
INFO  10:25:56,022 - #35 ,
INFO  10:25:56,022 - #45 int
INFO  10:25:56,022 - #45 arr
INFO  10:25:56,022 - #39 [
INFO  10:25:56,022 - #40 ]
INFO  10:25:56,022 - #33 ;
INFO  10:25:56,022 - #41 {
INFO  10:25:56,022 - #45 val
INFO  10:25:56,022 - #30 =
INFO  10:25:56,022 - #9 new
INFO  10:25:56,022 - #45 Table
INFO  10:25:56,023 - #37 (
INFO  10:25:56,023 - #44 2
INFO  10:25:56,023 - #38 )
INFO  10:25:56,023 - #33 ;
INFO  10:25:56,023 - #45 arr
INFO  10:25:56,023 - #30 =
INFO  10:25:56,023 - #9 new
INFO  10:25:56,023 - #45 int
INFO  10:25:56,023 - #39 [
INFO  10:25:56,023 - #44 3
INFO  10:25:56,023 - #40 ]
INFO  10:25:56,023 - #33 ;
INFO  10:25:56,023 - #45 i
INFO  10:25:56,023 - #30 =
INFO  10:25:56,023 - #44 0
INFO  10:25:56,023 - #33 ;
INFO  10:25:56,023 - #8 while
INFO  10:25:56,023 - #37 (
INFO  10:25:56,023 - #45 i
INFO  10:25:56,023 - #26 <
INFO  10:25:56,023 - #44 3
INFO  10:25:56,023 - #38 )
INFO  10:25:56,023 - #41 {
INFO  10:25:56,023 - #45 arr
INFO  10:25:56,023 - #39 [
INFO  10:25:56,023 - #45 i
INFO  10:25:56,023 - #40 ]
INFO  10:25:56,023 - #30 =
INFO  10:25:56,023 - #45 i
INFO  10:25:56,023 - #33 ;
INFO  10:25:56,024 - #45 i
INFO  10:25:56,024 - #31 ++
INFO  10:25:56,024 - #33 ;
INFO  10:25:56,024 - #42 }
INFO  10:25:56,024 - #45 arr
INFO  10:25:56,024 - #36 .
INFO  10:25:56,024 - #16 foreach
INFO  10:25:56,024 - #37 (
INFO  10:25:56,024 - #45 x
INFO  10:25:56,024 - #43 =>
INFO  10:25:56,024 - #10 print
INFO  10:25:56,024 - #37 (
INFO  10:25:56,024 - #45 x
INFO  10:25:56,024 - #38 )
INFO  10:25:56,024 - #33 ;
INFO  10:25:56,024 - #38 )
INFO  10:25:56,024 - #33 ;
INFO  10:25:56,024 - #45 val
INFO  10:25:56,024 - #36 .
INFO  10:25:56,024 - #45 pos
INFO  10:25:56,024 - #30 =
INFO  10:25:56,024 - #9 new
INFO  10:25:56,024 - #45 int
INFO  10:25:56,024 - #39 [
INFO  10:25:56,024 - #45 size
INFO  10:25:56,024 - #40 ]
INFO  10:25:56,024 - #33 ;
INFO  10:25:56,024 - #45 val
INFO  10:25:56,024 - #36 .
INFO  10:25:56,025 - #45 neg
INFO  10:25:56,025 - #30 =
INFO  10:25:56,025 - #9 new
INFO  10:25:56,025 - #45 int
INFO  10:25:56,025 - #39 [
INFO  10:25:56,025 - #45 size
INFO  10:25:56,025 - #40 ]
INFO  10:25:56,025 - #33 ;
INFO  10:25:56,025 - #11 read
INFO  10:25:56,025 - #37 (
INFO  10:25:56,025 - #45 x
INFO  10:25:56,025 - #38 )
INFO  10:25:56,025 - #33 ;
INFO  10:25:56,025 - #39 [
INFO  10:25:56,026 - #45 i
INFO  10:25:56,026 - #35 ,
INFO  10:25:56,026 - #35 ,
INFO  10:25:56,026 - #45 x
INFO  10:25:56,026 - #40 ]
INFO  10:25:56,026 - #30 =
INFO  10:25:56,026 - #45 arr
INFO  10:25:56,026 - #33 ;
INFO  10:25:56,026 - #8 while
INFO  10:25:56,026 - #37 (
INFO  10:25:56,026 - #45 i
INFO  10:25:56,026 - #26 <
INFO  10:25:56,026 - #45 size
INFO  10:25:56,026 - #38 )
INFO  10:25:56,026 - #41 {
INFO  10:25:56,026 - #45 val
INFO  10:25:56,026 - #36 .
INFO  10:25:56,026 - #45 putp
INFO  10:25:56,026 - #37 (
INFO  10:25:56,026 - #44 0
INFO  10:25:56,026 - #35 ,
INFO  10:25:56,027 - #45 i
INFO  10:25:56,027 - #38 )
INFO  10:25:56,027 - #33 ;
INFO  10:25:56,027 - #45 val
INFO  10:25:56,027 - #36 .
INFO  10:25:56,027 - #45 putn
INFO  10:25:56,028 - #37 (
INFO  10:25:56,028 - #44 0
INFO  10:25:56,028 - #35 ,
INFO  10:25:56,028 - #45 i
INFO  10:25:56,028 - #38 )
INFO  10:25:56,028 - #33 ;
INFO  10:25:56,028 - #45 i
INFO  10:25:56,028 - #31 ++
INFO  10:25:56,028 - #33 ;
INFO  10:25:56,028 - #42 }
INFO  10:25:56,029 - #45 f
INFO  10:25:56,029 - #37 (
INFO  10:25:56,029 - #45 c
INFO  10:25:56,029 - #35 ,
INFO  10:25:56,029 - #45 x
INFO  10:25:56,029 - #35 ,
INFO  10:25:56,029 - #45 i
INFO  10:25:56,029 - #38 )
INFO  10:25:56,029 - #33 ;
INFO  10:25:56,029 - #11 read
INFO  10:25:56,029 - #37 (
INFO  10:25:56,029 - #45 rows
INFO  10:25:56,029 - #38 )
INFO  10:25:56,029 - #33 ;
INFO  10:25:56,029 - #45 x
INFO  10:25:56,029 - #30 =
INFO  10:25:56,030 - #45 rows
INFO  10:25:56,030 - #33 ;
INFO  10:25:56,030 - #8 while
INFO  10:25:56,030 - #37 (
INFO  10:25:56,030 - #46 true
INFO  10:25:56,030 - #38 )
INFO  10:25:56,030 - #41 {
INFO  10:25:56,030 - #7 if
INFO  10:25:56,030 - #37 (
INFO  10:25:56,030 - #45 x
INFO  10:25:56,030 - #27 <=
INFO  10:25:56,030 - #44 0
INFO  10:25:56,030 - #38 )
INFO  10:25:56,030 - #3 break
INFO  10:25:56,030 - #33 ;
INFO  10:25:56,030 - #7 if
INFO  10:25:56,030 - #37 (
INFO  10:25:56,030 - #44 0
INFO  10:25:56,030 - #27 <=
INFO  10:25:56,030 - #45 x
INFO  10:25:56,031 - #28 &&
INFO  10:25:56,031 - #45 x
INFO  10:25:56,031 - #26 <
INFO  10:25:56,031 - #45 size
INFO  10:25:56,031 - #38 )
INFO  10:25:56,031 - #41 {
INFO  10:25:56,031 - #45 val
INFO  10:25:56,031 - #36 .
INFO  10:25:56,031 - #45 putp
INFO  10:25:56,031 - #37 (
INFO  10:25:56,031 - #45 val
INFO  10:25:56,031 - #36 .
INFO  10:25:56,031 - #45 getp
INFO  10:25:56,031 - #37 (
INFO  10:25:56,031 - #45 x
INFO  10:25:56,031 - #38 )
INFO  10:25:56,032 - #17 +
INFO  10:25:56,032 - #44 1
INFO  10:25:56,032 - #38 )
INFO  10:25:56,032 - #33 ;
INFO  10:25:56,032 - #42 }
INFO  10:25:56,032 - #5 else
INFO  10:25:56,032 - #7 if
INFO  10:25:56,032 - #37 (
INFO  10:25:56,032 - #18 -
INFO  10:25:56,032 - #45 size
INFO  10:25:56,032 - #26 <
INFO  10:25:56,032 - #45 x
INFO  10:25:56,032 - #28 &&
INFO  10:25:56,032 - #45 x
INFO  10:25:56,032 - #26 <
INFO  10:25:56,032 - #44 0
INFO  10:25:56,032 - #38 )
INFO  10:25:56,032 - #41 {
INFO  10:25:56,032 - #45 val
INFO  10:25:56,032 - #36 .
INFO  10:25:56,032 - #45 putn
INFO  10:25:56,032 - #37 (
INFO  10:25:56,032 - #45 val
INFO  10:25:56,032 - #36 .
INFO  10:25:56,033 - #45 getn
INFO  10:25:56,033 - #37 (
INFO  10:25:56,033 - #18 -
INFO  10:25:56,033 - #45 x
INFO  10:25:56,033 - #38 )
INFO  10:25:56,033 - #17 +
INFO  10:25:56,033 - #44 1
INFO  10:25:56,033 - #38 )
INFO  10:25:56,033 - #33 ;
INFO  10:25:56,033 - #42 }
INFO  10:25:56,033 - #11 read
INFO  10:25:56,033 - #37 (
INFO  10:25:56,033 - #45 x
INFO  10:25:56,033 - #38 )
INFO  10:25:56,033 - #33 ;
INFO  10:25:56,033 - #42 }
INFO  10:25:56,033 - #42 }
INFO  10:25:56,033 - #42 }
ERROR 10:25:56,034 - Fatal error, parsing will not continue on line 58
