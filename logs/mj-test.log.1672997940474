INFO  10:34:03,394 - Compiling source file: D:\Fakultet\PP1\domaci\workspace\MJCompiler\test\program.mj
INFO  10:34:03,427 - #2 program
INFO  10:34:03,427 - #45 p
INFO  10:34:03,427 - #6 const
INFO  10:34:03,428 - #45 int
INFO  10:34:03,428 - #45 size
INFO  10:34:03,428 - #30 =
INFO  10:34:03,429 - #44 10
INFO  10:34:03,429 - #33 ;
INFO  10:34:03,429 - #4 class
INFO  10:34:03,430 - #45 Table
INFO  10:34:03,430 - #14 extends
INFO  10:34:03,430 - #17 +
ERROR 10:34:03,430 - 
Syntax Error on line 5
INFO  10:34:03,430 - #18 -
INFO  10:34:03,430 - #41 {
INFO  10:34:03,430 - #45 int
INFO  10:34:03,431 - #45 pos
INFO  10:34:03,432 - #39 [
INFO  10:34:03,432 - #40 ]
INFO  10:34:03,432 - #35 ,
INFO  10:34:03,432 - #45 neg
INFO  10:34:03,440 - #39 [
INFO  10:34:03,440 - #40 ]
INFO  10:34:03,440 - #35 ,
INFO  10:34:03,440 - #45 factor
INFO  10:34:03,442 - #33 ;
INFO  10:34:03,442 - #41 {
INFO  10:34:03,442 - #45 Table
INFO  10:34:03,442 - #37 (
INFO  10:34:03,442 - #45 int
INFO  10:34:03,442 - #45 factor
INFO  10:34:03,442 - #38 )
INFO  10:34:03,442 - #41 {
INFO  10:34:03,442 - #45 this
INFO  10:34:03,442 - #36 .
INFO  10:34:03,442 - #45 factor
INFO  10:34:03,442 - #30 =
INFO  10:34:03,443 - #45 factor
INFO  10:34:03,443 - #33 ;
INFO  10:34:03,443 - #42 }
INFO  10:34:03,443 - #13 void
INFO  10:34:03,443 - #45 putp
INFO  10:34:03,443 - #37 (
INFO  10:34:03,443 - #45 int
INFO  10:34:03,443 - #45 a
INFO  10:34:03,443 - #35 ,
INFO  10:34:03,443 - #45 int
INFO  10:34:03,443 - #45 idx
INFO  10:34:03,443 - #38 )
INFO  10:34:03,443 - #41 {
INFO  10:34:03,443 - #45 this
INFO  10:34:03,443 - #36 .
INFO  10:34:03,443 - #45 pos
INFO  10:34:03,443 - #39 [
INFO  10:34:03,443 - #45 idx
INFO  10:34:03,443 - #40 ]
INFO  10:34:03,444 - #30 =
INFO  10:34:03,444 - #45 a
INFO  10:34:03,444 - #33 ;
INFO  10:34:03,444 - #42 }
INFO  10:34:03,444 - #13 void
INFO  10:34:03,444 - #45 putn
INFO  10:34:03,444 - #37 (
INFO  10:34:03,444 - #45 int
INFO  10:34:03,444 - #45 a
INFO  10:34:03,445 - #35 ,
INFO  10:34:03,445 - #45 int
INFO  10:34:03,445 - #45 idx
INFO  10:34:03,445 - #38 )
INFO  10:34:03,445 - #41 {
INFO  10:34:03,445 - #45 this
INFO  10:34:03,445 - #36 .
INFO  10:34:03,445 - #45 neg
INFO  10:34:03,445 - #39 [
INFO  10:34:03,445 - #45 idx
INFO  10:34:03,446 - #40 ]
INFO  10:34:03,446 - #30 =
INFO  10:34:03,446 - #45 a
INFO  10:34:03,446 - #33 ;
INFO  10:34:03,446 - #42 }
INFO  10:34:03,446 - #45 int
INFO  10:34:03,446 - #45 getp
INFO  10:34:03,447 - #37 (
INFO  10:34:03,447 - #45 int
INFO  10:34:03,447 - #45 idx
INFO  10:34:03,447 - #38 )
INFO  10:34:03,447 - #41 {
INFO  10:34:03,447 - #12 return
INFO  10:34:03,447 - #45 pos
INFO  10:34:03,447 - #39 [
INFO  10:34:03,447 - #45 idx
INFO  10:34:03,447 - #40 ]
INFO  10:34:03,448 - #33 ;
INFO  10:34:03,448 - #42 }
INFO  10:34:03,448 - #45 int
INFO  10:34:03,448 - #45 getn
INFO  10:34:03,448 - #37 (
INFO  10:34:03,448 - #45 int
INFO  10:34:03,448 - #45 idx
INFO  10:34:03,448 - #38 )
INFO  10:34:03,448 - #41 {
INFO  10:34:03,448 - #12 return
INFO  10:34:03,448 - #45 neg
INFO  10:34:03,448 - #39 [
INFO  10:34:03,448 - #45 idx
INFO  10:34:03,448 - #40 ]
INFO  10:34:03,449 - #33 ;
INFO  10:34:03,449 - #42 }
INFO  10:34:03,449 - #42 }
INFO  10:34:03,449 - #42 }
INFO  10:34:03,449 - #45 Table
INFO  10:34:03,449 - #45 val
INFO  10:34:03,449 - #33 ;
INFO  10:34:03,449 - #45 Int
INFO  10:34:03,449 - #45 rows
INFO  10:34:03,449 - #35 ,
INFO  10:34:03,449 - #45 columns
INFO  10:34:03,449 - #33 ;
INFO  10:34:03,449 - #41 {
INFO  10:34:03,449 - #13 void
INFO  10:34:03,450 - #45 f
INFO  10:34:03,450 - #37 (
INFO  10:34:03,450 - #45 char
INFO  10:34:03,450 - #45 ch
INFO  10:34:03,450 - #35 ,
INFO  10:34:03,450 - #45 int
INFO  10:34:03,450 - #45 a
INFO  10:34:03,450 - #35 ,
INFO  10:34:03,450 - #45 int
INFO  10:34:03,450 - #45 arg
INFO  10:34:03,450 - #38 )
INFO  10:34:03,450 - #45 int
INFO  10:34:03,450 - #45 x
INFO  10:34:03,451 - #33 ;
INFO  10:34:03,451 - #41 {
INFO  10:34:03,451 - #45 x
INFO  10:34:03,451 - #30 =
INFO  10:34:03,451 - #45 arg
INFO  10:34:03,451 - #33 ;
INFO  10:34:03,451 - #42 }
INFO  10:34:03,451 - #13 void
INFO  10:34:03,451 - #45 main
INFO  10:34:03,451 - #37 (
INFO  10:34:03,451 - #38 )
INFO  10:34:03,451 - #45 int
INFO  10:34:03,451 - #45 x
INFO  10:34:03,451 - #35 ,
INFO  10:34:03,451 - #45 i
INFO  10:34:03,451 - #33 ;
INFO  10:34:03,452 - #45 char
INFO  10:34:03,452 - #45 c
INFO  10:34:03,452 - #33 ;
INFO  10:34:03,452 - #45 int
INFO  10:34:03,452 - #45 arr
INFO  10:34:03,452 - #39 [
INFO  10:34:03,452 - #40 ]
INFO  10:34:03,452 - #33 ;
INFO  10:34:03,452 - #41 {
INFO  10:34:03,452 - #45 val
INFO  10:34:03,452 - #30 =
INFO  10:34:03,452 - #9 new
INFO  10:34:03,452 - #45 Table
INFO  10:34:03,452 - #37 (
INFO  10:34:03,452 - #44 2
INFO  10:34:03,452 - #38 )
INFO  10:34:03,452 - #33 ;
INFO  10:34:03,452 - #45 arr
INFO  10:34:03,452 - #30 =
INFO  10:34:03,452 - #9 new
INFO  10:34:03,454 - #45 int
INFO  10:34:03,454 - #39 [
INFO  10:34:03,454 - #44 3
INFO  10:34:03,454 - #40 ]
INFO  10:34:03,454 - #33 ;
INFO  10:34:03,454 - #45 i
INFO  10:34:03,454 - #30 =
INFO  10:34:03,454 - #44 0
INFO  10:34:03,454 - #33 ;
INFO  10:34:03,454 - #8 while
INFO  10:34:03,454 - #37 (
INFO  10:34:03,454 - #45 i
INFO  10:34:03,454 - #26 <
INFO  10:34:03,455 - #44 3
INFO  10:34:03,455 - #38 )
INFO  10:34:03,455 - #41 {
INFO  10:34:03,455 - #45 arr
INFO  10:34:03,455 - #39 [
INFO  10:34:03,455 - #45 i
INFO  10:34:03,455 - #40 ]
INFO  10:34:03,455 - #30 =
INFO  10:34:03,455 - #45 i
INFO  10:34:03,455 - #33 ;
INFO  10:34:03,455 - #45 i
INFO  10:34:03,455 - #31 ++
INFO  10:34:03,456 - #33 ;
INFO  10:34:03,456 - #42 }
INFO  10:34:03,456 - #45 arr
INFO  10:34:03,456 - #36 .
INFO  10:34:03,456 - #16 foreach
INFO  10:34:03,456 - #37 (
INFO  10:34:03,456 - #45 x
INFO  10:34:03,456 - #43 =>
INFO  10:34:03,456 - #10 print
INFO  10:34:03,456 - #37 (
INFO  10:34:03,456 - #45 x
INFO  10:34:03,456 - #38 )
INFO  10:34:03,456 - #33 ;
INFO  10:34:03,456 - #38 )
INFO  10:34:03,456 - #33 ;
INFO  10:34:03,457 - #45 val
INFO  10:34:03,457 - #36 .
INFO  10:34:03,457 - #45 pos
INFO  10:34:03,457 - #30 =
INFO  10:34:03,457 - #9 new
INFO  10:34:03,457 - #45 int
INFO  10:34:03,457 - #39 [
INFO  10:34:03,457 - #45 size
INFO  10:34:03,457 - #40 ]
INFO  10:34:03,457 - #33 ;
INFO  10:34:03,457 - #45 val
INFO  10:34:03,457 - #36 .
INFO  10:34:03,457 - #45 neg
INFO  10:34:03,457 - #30 =
INFO  10:34:03,457 - #9 new
INFO  10:34:03,457 - #45 int
INFO  10:34:03,457 - #39 [
INFO  10:34:03,457 - #45 size
INFO  10:34:03,457 - #40 ]
INFO  10:34:03,457 - #33 ;
INFO  10:34:03,457 - #11 read
INFO  10:34:03,458 - #37 (
INFO  10:34:03,458 - #45 x
INFO  10:34:03,458 - #38 )
INFO  10:34:03,458 - #33 ;
INFO  10:34:03,458 - #39 [
INFO  10:34:03,458 - #45 i
INFO  10:34:03,458 - #35 ,
INFO  10:34:03,458 - #35 ,
INFO  10:34:03,458 - #45 x
INFO  10:34:03,458 - #40 ]
INFO  10:34:03,458 - #30 =
INFO  10:34:03,458 - #45 arr
INFO  10:34:03,458 - #33 ;
INFO  10:34:03,458 - #8 while
INFO  10:34:03,458 - #37 (
INFO  10:34:03,458 - #45 i
INFO  10:34:03,458 - #26 <
INFO  10:34:03,458 - #45 size
INFO  10:34:03,459 - #38 )
INFO  10:34:03,459 - #41 {
INFO  10:34:03,459 - #45 val
INFO  10:34:03,459 - #36 .
INFO  10:34:03,459 - #45 putp
INFO  10:34:03,459 - #37 (
INFO  10:34:03,459 - #44 0
INFO  10:34:03,459 - #35 ,
INFO  10:34:03,459 - #45 i
INFO  10:34:03,459 - #38 )
INFO  10:34:03,460 - #33 ;
INFO  10:34:03,460 - #45 val
INFO  10:34:03,460 - #36 .
INFO  10:34:03,460 - #45 putn
INFO  10:34:03,460 - #37 (
INFO  10:34:03,460 - #44 0
INFO  10:34:03,460 - #35 ,
INFO  10:34:03,460 - #45 i
INFO  10:34:03,460 - #38 )
INFO  10:34:03,460 - #33 ;
INFO  10:34:03,460 - #45 i
INFO  10:34:03,460 - #31 ++
INFO  10:34:03,460 - #33 ;
INFO  10:34:03,460 - #42 }
INFO  10:34:03,460 - #45 f
INFO  10:34:03,460 - #37 (
INFO  10:34:03,460 - #45 c
INFO  10:34:03,460 - #35 ,
INFO  10:34:03,460 - #45 x
INFO  10:34:03,460 - #35 ,
INFO  10:34:03,460 - #45 i
INFO  10:34:03,461 - #38 )
INFO  10:34:03,461 - #33 ;
INFO  10:34:03,461 - #11 read
INFO  10:34:03,461 - #37 (
INFO  10:34:03,461 - #45 rows
INFO  10:34:03,461 - #38 )
INFO  10:34:03,461 - #33 ;
INFO  10:34:03,461 - #45 x
INFO  10:34:03,461 - #30 =
INFO  10:34:03,461 - #45 rows
INFO  10:34:03,461 - #33 ;
INFO  10:34:03,461 - #8 while
INFO  10:34:03,461 - #37 (
INFO  10:34:03,461 - #46 true
INFO  10:34:03,462 - #38 )
INFO  10:34:03,462 - #41 {
INFO  10:34:03,462 - #7 if
INFO  10:34:03,462 - #37 (
INFO  10:34:03,462 - #45 x
INFO  10:34:03,462 - #27 <=
INFO  10:34:03,462 - #44 0
INFO  10:34:03,462 - #38 )
INFO  10:34:03,462 - #3 break
INFO  10:34:03,462 - #33 ;
INFO  10:34:03,462 - #7 if
INFO  10:34:03,462 - #37 (
INFO  10:34:03,462 - #44 0
INFO  10:34:03,462 - #27 <=
INFO  10:34:03,462 - #45 x
INFO  10:34:03,462 - #28 &&
INFO  10:34:03,462 - #45 x
INFO  10:34:03,462 - #26 <
INFO  10:34:03,462 - #45 size
INFO  10:34:03,462 - #38 )
INFO  10:34:03,462 - #41 {
INFO  10:34:03,462 - #45 val
INFO  10:34:03,463 - #36 .
INFO  10:34:03,463 - #45 putp
INFO  10:34:03,463 - #37 (
INFO  10:34:03,463 - #45 val
INFO  10:34:03,463 - #36 .
INFO  10:34:03,463 - #45 getp
INFO  10:34:03,463 - #37 (
INFO  10:34:03,463 - #45 x
INFO  10:34:03,463 - #38 )
INFO  10:34:03,463 - #17 +
INFO  10:34:03,463 - #44 1
INFO  10:34:03,463 - #38 )
INFO  10:34:03,463 - #33 ;
INFO  10:34:03,463 - #42 }
INFO  10:34:03,463 - #5 else
INFO  10:34:03,463 - #7 if
INFO  10:34:03,463 - #37 (
INFO  10:34:03,463 - #18 -
INFO  10:34:03,464 - #45 size
INFO  10:34:03,464 - #26 <
INFO  10:34:03,464 - #45 x
INFO  10:34:03,464 - #28 &&
INFO  10:34:03,464 - #45 x
INFO  10:34:03,464 - #26 <
INFO  10:34:03,464 - #44 0
INFO  10:34:03,464 - #38 )
INFO  10:34:03,464 - #41 {
INFO  10:34:03,464 - #45 val
INFO  10:34:03,464 - #36 .
INFO  10:34:03,464 - #45 putn
INFO  10:34:03,464 - #37 (
INFO  10:34:03,464 - #45 val
INFO  10:34:03,464 - #36 .
INFO  10:34:03,464 - #45 getn
INFO  10:34:03,464 - #37 (
INFO  10:34:03,464 - #18 -
INFO  10:34:03,464 - #45 x
INFO  10:34:03,464 - #38 )
INFO  10:34:03,464 - #17 +
INFO  10:34:03,464 - #44 1
INFO  10:34:03,464 - #38 )
INFO  10:34:03,464 - #33 ;
INFO  10:34:03,464 - #42 }
INFO  10:34:03,464 - #11 read
INFO  10:34:03,464 - #37 (
INFO  10:34:03,464 - #45 x
INFO  10:34:03,464 - #38 )
INFO  10:34:03,464 - #33 ;
INFO  10:34:03,464 - #42 }
INFO  10:34:03,464 - #42 }
INFO  10:34:03,464 - #42 }
ERROR 10:34:03,465 - Fatal error, parsing will not continue on line 60
